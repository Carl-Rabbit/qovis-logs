Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
23/11/10 17:20:35 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
Spark context Web UI available at http://Jiahao:4040
Spark context available as 'sc' (master = local[*], app id = local-1699608035741).
Spark session available as 'spark'.
23/11/10 17:20:38 DEBUG FileSystem: Looking for FS supporting file
23/11/10 17:20:38 DEBUG FileSystem: looking for configuration option fs.file.impl
23/11/10 17:20:38 DEBUG FileSystem: Looking in service filesystems for implementation class
23/11/10 17:20:38 DEBUG FileSystem: FS for file is class org.apache.hadoop.hive.ql.io.ProxyLocalFileSystem
23/11/10 17:20:38 INFO SharedState: spark.sql.warehouse.dir is not set, but hive.metastore.warehouse.dir is set. Setting spark.sql.warehouse.dir to the value of hive.metastore.warehouse.dir.
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.eventLog.enabled -> true
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.jars -> 
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.repl.class.outputDir -> /tmp/spark-21ceebfc-feb5-4a21-984b-b4ea50c69e65/repl-171aecc2-df5b-46d6-a2d8-1c15fbe907a0
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.app.name -> Spark shell
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.submit.pyFiles -> 
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.ui.showConsoleProgress -> true
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.app.submitTime -> 1699608032605
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.sql.cbo.enabled -> true
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.submit.deployMode -> client
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.master -> local[*]
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.sql.statistics.histogram.enabled -> true
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.home -> /home/dbgroup/Applications/spark-3.3.0
23/11/10 17:20:38 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.eventLog.dir -> hdfs://Jiahao:9000/spark3.3.0-logs
23/11/10 17:20:38 DEBUG SharedState: Applying static initial session options to SparkConf: spark.sql.catalogImplementation -> hive
23/11/10 17:20:38 INFO SharedState: Warehouse path is 'hdfs://Jiahao:9000/warehouse'.
23/11/10 17:20:38 DEBUG FsUrlStreamHandlerFactory: Creating handler for protocol jar
23/11/10 17:20:38 DEBUG FileSystem: Looking for FS supporting jar
23/11/10 17:20:38 DEBUG FileSystem: looking for configuration option fs.jar.impl
23/11/10 17:20:38 DEBUG FileSystem: Looking in service filesystems for implementation class
23/11/10 17:20:38 DEBUG FsUrlStreamHandlerFactory: Unknown protocol jar, delegating to default implementation
23/11/10 17:20:38 DEBUG FsUrlStreamHandlerFactory: Creating handler for protocol file
23/11/10 17:20:38 DEBUG FileSystem: Looking for FS supporting file
23/11/10 17:20:38 DEBUG FileSystem: looking for configuration option fs.file.impl
23/11/10 17:20:38 DEBUG FileSystem: Looking in service filesystems for implementation class
23/11/10 17:20:38 DEBUG FileSystem: FS for file is class org.apache.hadoop.hive.ql.io.ProxyLocalFileSystem
23/11/10 17:20:38 DEBUG FsUrlStreamHandlerFactory: Found implementation of file: class org.apache.hadoop.hive.ql.io.ProxyLocalFileSystem
23/11/10 17:20:38 DEBUG FsUrlStreamHandlerFactory: Using handler for protocol file
23/11/10 17:20:39 DEBUG CatalystSqlParser: Parsing command: spark_grouping_id
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Substitution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
23/11/10 17:20:39 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [id#2, nested#3]
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Resolution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Apply Char Padding after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Apply Char Padding has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch UDF has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UpdateNullability after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch UpdateNullability has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Cleanup has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch HandleAnalysisOnlyCommand after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 81
Total time: 0.087716333 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Substitution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
23/11/10 17:20:39 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [id#2, nested#3]
23/11/10 17:20:39 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'id to id#2
23/11/10 17:20:39 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'nested to nested#3
23/11/10 17:20:39 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'nested to nested#3
23/11/10 17:20:39 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'nested to nested#3
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table)), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table   'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table
 +- LocalRelation <empty>, [id#2, nested#3]                                                                                                                                        +- LocalRelation <empty>, [id#2, nested#3]
           
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
 'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table   'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table
 +- LocalRelation <empty>, [id#2, nested#3]                                                                                                                +- LocalRelation <empty>, [id#2, nested#3]
           
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table   'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table
 +- LocalRelation <empty>, [id#2, nested#3]                                                                                                                +- LocalRelation <empty>, [id#2, nested#3]
           
23/11/10 17:20:39 TRACE Analyzer$ResolveReferences: Attempting to resolve 'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveNewInstance ===
!'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table   DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table
 +- LocalRelation <empty>, [id#2, nested#3]                                                                                                                +- LocalRelation <empty>, [id#2, nested#3]
           
23/11/10 17:20:39 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 3 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table)), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table   DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table), obj#4: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Table
 +- LocalRelation <empty>, [id#2, nested#3]                                                                                                                                        +- LocalRelation <empty>, [id#2, nested#3]
          
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Apply Char Padding after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Apply Char Padding has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch UDF has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UpdateNullability after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch UpdateNullability has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Cleanup has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch HandleAnalysisOnlyCommand after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 185
Total time: 0.030666184 seconds
Total number of effective runs: 4
Total time of effective runs: 0.019894275 seconds
      
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Union has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch OptimizeLimitZero after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch OptimizeLimitZero has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Aggregate has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Operator Optimization before Inferring Filters has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
23/11/10 17:20:39 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 174
Total time: 0.064032869 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Preparations has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Substitution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
23/11/10 17:20:39 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [id#18]
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Resolution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Apply Char Padding after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Apply Char Padding has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch UDF has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UpdateNullability after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch UpdateNullability has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Cleanup has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch HandleAnalysisOnlyCommand after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 81
Total time: 0.001034848 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Substitution has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Hints has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
23/11/10 17:20:39 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
23/11/10 17:20:39 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
23/11/10 17:20:39 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [id#18]
23/11/10 17:20:39 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'id to id#18
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier)), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier   'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier
 +- LocalRelation <empty>, [id#18]                                                                                                                                                            +- LocalRelation <empty>, [id#18]
           
23/11/10 17:20:39 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
 'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier   'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier
 +- LocalRelation <empty>, [id#18]                                                                                                                                    +- LocalRelation <empty>, [id#18]
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier   'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier
 +- LocalRelation <empty>, [id#18]                                                                                                                                    +- LocalRelation <empty>, [id#18]
           
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve 'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveNewInstance ===
!'DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier   DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier
 +- LocalRelation <empty>, [id#18]                                                                                                                                    +- LocalRelation <empty>, [id#18]
           
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 3 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier)), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier   DeserializeToObject newInstance(class $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier), obj#19: $line14.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$Identifier
 +- LocalRelation <empty>, [id#18]                                                                                                                                                            +- LocalRelation <empty>, [id#18]
          
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Apply Char Padding after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Apply Char Padding has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch UDF has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UpdateNullability after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch UpdateNullability has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Cleanup has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch HandleAnalysisOnlyCommand after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 185
Total time: 0.004255871 seconds
Total number of effective runs: 4
Total time of effective runs: 8.10914E-4 seconds
      
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Union has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch OptimizeLimitZero after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch OptimizeLimitZero has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Aggregate has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Operator Optimization before Inferring Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 174
Total time: 0.002017412 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Preparations has no effect.
23/11/10 17:20:40 DEBUG SparkSqlParser: Parsing command: tbl
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Substitution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve CreateViewCommand `tbl`, false, true, LocalTempView, true
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Resolution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Apply Char Padding after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Apply Char Padding has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch UDF has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UpdateNullability after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch UpdateNullability has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Cleanup has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch HandleAnalysisOnlyCommand after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 81
Total time: 0.001487054 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Union has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch OptimizeLimitZero after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch OptimizeLimitZero has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Aggregate has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Operator Optimization before Inferring Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 174
Total time: 0.002016989 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Preparations has no effect.
23/11/10 17:20:40 DEBUG SparkSqlParser: Parsing command: ids
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Substitution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve CreateViewCommand `ids`, false, true, LocalTempView, true
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Resolution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Apply Char Padding after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Apply Char Padding has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch UDF has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UpdateNullability after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch UpdateNullability has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Cleanup has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch HandleAnalysisOnlyCommand after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 81
Total time: 0.001251136 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Union has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch OptimizeLimitZero after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch OptimizeLimitZero has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Aggregate has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Operator Optimization before Inferring Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 174
Total time: 0.002110575 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Preparations has no effect.
23/11/10 17:20:40 DEBUG SparkSqlParser: Parsing command: select tbl.id, tbl.nested.n from tbl left anti join ids on tbl.id = ids.id
23/11/10 17:20:40 DEBUG DFSClient: WriteChunk allocating new packet seqno=6, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=87552, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:40 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=90998, lastFlushOffset=87695, createNewBlock=false
23/11/10 17:20:40 DEBUG DataStreamer: Queued packet seqno: 6 offsetInBlock: 87552 lastPacketInBlock: false lastByteOffsetInBlock: 90998, blk_1073742674_1855
23/11/10 17:20:40 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 6
23/11/10 17:20:40 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:40 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 6 offsetInBlock: 87552 lastPacketInBlock: false lastByteOffsetInBlock: 90998
23/11/10 17:20:40 DEBUG DataStreamer: DFSClient seqno: 6 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:40 DEBUG DFSClient: WriteChunk allocating new packet seqno=7, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=90624, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:40 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=91110, lastFlushOffset=90998, createNewBlock=false
23/11/10 17:20:40 DEBUG DataStreamer: Queued packet seqno: 7 offsetInBlock: 90624 lastPacketInBlock: false lastByteOffsetInBlock: 91110, blk_1073742674_1855
23/11/10 17:20:40 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 7
23/11/10 17:20:40 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:40 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 7 offsetInBlock: 90624 lastPacketInBlock: false lastByteOffsetInBlock: 91110
23/11/10 17:20:40 DEBUG DataStreamer: DFSClient seqno: 7 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:40 DEBUG DFSClient: WriteChunk allocating new packet seqno=8, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=90624, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:40 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=94404, lastFlushOffset=91110, createNewBlock=false
23/11/10 17:20:40 DEBUG DataStreamer: Queued packet seqno: 8 offsetInBlock: 90624 lastPacketInBlock: false lastByteOffsetInBlock: 94404, blk_1073742674_1855
23/11/10 17:20:40 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 8
23/11/10 17:20:40 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:40 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 8 offsetInBlock: 90624 lastPacketInBlock: false lastByteOffsetInBlock: 94404
23/11/10 17:20:40 DEBUG DataStreamer: DFSClient seqno: 8 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:40 DEBUG DFSClient: WriteChunk allocating new packet seqno=9, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=94208, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:40 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=94516, lastFlushOffset=94404, createNewBlock=false
23/11/10 17:20:40 DEBUG DataStreamer: Queued packet seqno: 9 offsetInBlock: 94208 lastPacketInBlock: false lastByteOffsetInBlock: 94516, blk_1073742674_1855
23/11/10 17:20:40 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 9
23/11/10 17:20:40 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:40 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 9 offsetInBlock: 94208 lastPacketInBlock: false lastByteOffsetInBlock: 94516
23/11/10 17:20:40 DEBUG DataStreamer: DFSClient seqno: 9 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Substitution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations ===
 'Project ['tbl.id, 'tbl.nested.n]            'Project ['tbl.id, 'tbl.nested.n]
 +- 'Join LeftAnti, ('tbl.id = 'ids.id)       +- 'Join LeftAnti, ('tbl.id = 'ids.id)
!   :- 'UnresolvedRelation [tbl], [], false      :- SubqueryAlias tbl
!   +- 'UnresolvedRelation [ids], [], false      :  +- View (`tbl`, [id#2,nested#3])
!                                                :     +- LocalRelation <empty>, [id#2, nested#3]
!                                                +- SubqueryAlias ids
!                                                   +- View (`ids`, [id#18])
!                                                      +- LocalRelation <empty>, [id#18]
           
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve View (`tbl`, [id#2,nested#3])
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve SubqueryAlias tbl
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve View (`ids`, [id#18])
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve SubqueryAlias ids
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve 'Join LeftAnti, ('tbl.id = 'ids.id)
23/11/10 17:20:40 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'tbl.id to id#2
23/11/10 17:20:40 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'ids.id to id#18
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve 'Project ['tbl.id, 'tbl.nested.n]
23/11/10 17:20:40 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'tbl.id to id#2
23/11/10 17:20:40 DEBUG HiveSessionStateBuilder$$anon$1: Resolving 'tbl.nested.n to nested#3.n AS n#26L
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
!'Project ['tbl.id, 'tbl.nested.n]                     Project [id#2, nested#3.n AS n#26L]
!+- 'Join LeftAnti, ('tbl.id = 'ids.id)                +- Join LeftAnti, (id#2 = id#18)
    :- SubqueryAlias tbl                                  :- SubqueryAlias tbl
    :  +- View (`tbl`, [id#2,nested#3])                   :  +- View (`tbl`, [id#2,nested#3])
    :     +- LocalRelation <empty>, [id#2, nested#3]      :     +- LocalRelation <empty>, [id#2, nested#3]
    +- SubqueryAlias ids                                  +- SubqueryAlias ids
       +- View (`ids`, [id#18])                              +- View (`ids`, [id#18])
          +- LocalRelation <empty>, [id#18]                     +- LocalRelation <empty>, [id#18]
           
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve Join LeftAnti, (id#2 = id#18)
23/11/10 17:20:40 TRACE Analyzer$ResolveReferences: Attempting to resolve Project [id#2, nested#3.n AS n#26L]
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Result of Batch Resolution ===
!'Project ['tbl.id, 'tbl.nested.n]            Project [id#2, nested#3.n AS n#26L]
!+- 'Join LeftAnti, ('tbl.id = 'ids.id)       +- Join LeftAnti, (id#2 = id#18)
!   :- 'UnresolvedRelation [tbl], [], false      :- SubqueryAlias tbl
!   +- 'UnresolvedRelation [ids], [], false      :  +- View (`tbl`, [id#2,nested#3])
!                                                :     +- LocalRelation <empty>, [id#2, nested#3]
!                                                +- SubqueryAlias ids
!                                                   +- View (`ids`, [id#18])
!                                                      +- LocalRelation <empty>, [id#18]
          
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Apply Char Padding after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Apply Char Padding has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch UDF has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UpdateNullability after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch UpdateNullability has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Cleanup has no effect.
23/11/10 17:20:40 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch HandleAnalysisOnlyCommand after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 133
Total time: 0.019679343 seconds
Total number of effective runs: 2
Total time of effective runs: 0.010074695 seconds
      
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Union has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch OptimizeLimitZero after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch OptimizeLimitZero has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
23/11/10 17:20:40 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
23/11/10 17:20:40 TRACE PlanChangeLogger: Batch Aggregate has no effect.
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
!Project [id#2, nested#3.n AS n#26L]                                                             Project [id#2, _extract_n#59L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                +- Join LeftAnti, (id#2 = id#18)
!   :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :- Project [id#2, nested#3.n AS _extract_n#59L]
!   :     +- LocalTableScan <empty>, [id#2, nested#3]                                               :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- LocalTableScan <empty>, [id#18]                                                        +- Project [id#18]
!                                                                                                      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                            +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#59L AS n#26L]                                                            Project [id#2, _extract_n#59L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#59L]                                                    :- Project [id#2, nested#3.n AS _extract_n#59L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#59L AS n#26L]                                                            Project [id#2, _extract_n#59L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#59L]
!   :- Project [id#2, nested#3.n AS _extract_n#59L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#59L AS n#26L]                                                            Project [id#2, _extract_n#59L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#59L]                                                    +- Project [id#2, _extract_n#60L AS _extract_n#59L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#60L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#59L AS n#26L]                                                               Project [id#2, _extract_n#60L AS n#26L]
!+- Project [id#2, _extract_n#60L AS _extract_n#59L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#60L]
!      :- Project [id#2, nested#3.n AS _extract_n#60L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#60L AS n#26L]                                                            Project [id#2, _extract_n#60L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#60L]                                                    :- Project [id#2, nested#3.n AS _extract_n#60L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#60L AS n#26L]                                                            Project [id#2, _extract_n#60L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#60L]
!   :- Project [id#2, nested#3.n AS _extract_n#60L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#60L AS n#26L]                                                            Project [id#2, _extract_n#60L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#60L]                                                    +- Project [id#2, _extract_n#61L AS _extract_n#60L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#61L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:40 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#60L AS n#26L]                                                               Project [id#2, _extract_n#61L AS n#26L]
!+- Project [id#2, _extract_n#61L AS _extract_n#60L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#61L]
!      :- Project [id#2, nested#3.n AS _extract_n#61L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#61L AS n#26L]                                                            Project [id#2, _extract_n#61L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#61L]                                                    :- Project [id#2, nested#3.n AS _extract_n#61L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#61L AS n#26L]                                                            Project [id#2, _extract_n#61L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#61L]
!   :- Project [id#2, nested#3.n AS _extract_n#61L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#61L AS n#26L]                                                            Project [id#2, _extract_n#61L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#61L]                                                    +- Project [id#2, _extract_n#62L AS _extract_n#61L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#62L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#61L AS n#26L]                                                               Project [id#2, _extract_n#62L AS n#26L]
!+- Project [id#2, _extract_n#62L AS _extract_n#61L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#62L]
!      :- Project [id#2, nested#3.n AS _extract_n#62L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#62L AS n#26L]                                                            Project [id#2, _extract_n#62L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#62L]                                                    :- Project [id#2, nested#3.n AS _extract_n#62L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#62L AS n#26L]                                                            Project [id#2, _extract_n#62L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#62L]
!   :- Project [id#2, nested#3.n AS _extract_n#62L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#62L AS n#26L]                                                            Project [id#2, _extract_n#62L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#62L]                                                    +- Project [id#2, _extract_n#63L AS _extract_n#62L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#63L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#62L AS n#26L]                                                               Project [id#2, _extract_n#63L AS n#26L]
!+- Project [id#2, _extract_n#63L AS _extract_n#62L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#63L]
!      :- Project [id#2, nested#3.n AS _extract_n#63L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#63L AS n#26L]                                                            Project [id#2, _extract_n#63L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#63L]                                                    :- Project [id#2, nested#3.n AS _extract_n#63L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#63L AS n#26L]                                                            Project [id#2, _extract_n#63L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#63L]
!   :- Project [id#2, nested#3.n AS _extract_n#63L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#63L AS n#26L]                                                            Project [id#2, _extract_n#63L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#63L]                                                    +- Project [id#2, _extract_n#64L AS _extract_n#63L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#64L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#63L AS n#26L]                                                               Project [id#2, _extract_n#64L AS n#26L]
!+- Project [id#2, _extract_n#64L AS _extract_n#63L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#64L]
!      :- Project [id#2, nested#3.n AS _extract_n#64L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#64L AS n#26L]                                                            Project [id#2, _extract_n#64L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#64L]                                                    :- Project [id#2, nested#3.n AS _extract_n#64L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#64L AS n#26L]                                                            Project [id#2, _extract_n#64L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#64L]
!   :- Project [id#2, nested#3.n AS _extract_n#64L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#64L AS n#26L]                                                            Project [id#2, _extract_n#64L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#64L]                                                    +- Project [id#2, _extract_n#65L AS _extract_n#64L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#65L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#64L AS n#26L]                                                               Project [id#2, _extract_n#65L AS n#26L]
!+- Project [id#2, _extract_n#65L AS _extract_n#64L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#65L]
!      :- Project [id#2, nested#3.n AS _extract_n#65L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#65L AS n#26L]                                                            Project [id#2, _extract_n#65L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#65L]                                                    :- Project [id#2, nested#3.n AS _extract_n#65L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#65L AS n#26L]                                                            Project [id#2, _extract_n#65L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#65L]
!   :- Project [id#2, nested#3.n AS _extract_n#65L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#65L AS n#26L]                                                            Project [id#2, _extract_n#65L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#65L]                                                    +- Project [id#2, _extract_n#66L AS _extract_n#65L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#66L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#65L AS n#26L]                                                               Project [id#2, _extract_n#66L AS n#26L]
!+- Project [id#2, _extract_n#66L AS _extract_n#65L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#66L]
!      :- Project [id#2, nested#3.n AS _extract_n#66L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#66L AS n#26L]                                                            Project [id#2, _extract_n#66L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#66L]                                                    :- Project [id#2, nested#3.n AS _extract_n#66L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#66L AS n#26L]                                                            Project [id#2, _extract_n#66L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#66L]
!   :- Project [id#2, nested#3.n AS _extract_n#66L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#66L AS n#26L]                                                            Project [id#2, _extract_n#66L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#66L]                                                    +- Project [id#2, _extract_n#67L AS _extract_n#66L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#67L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#66L AS n#26L]                                                               Project [id#2, _extract_n#67L AS n#26L]
!+- Project [id#2, _extract_n#67L AS _extract_n#66L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#67L]
!      :- Project [id#2, nested#3.n AS _extract_n#67L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#67L AS n#26L]                                                            Project [id#2, _extract_n#67L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#67L]                                                    :- Project [id#2, nested#3.n AS _extract_n#67L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#67L AS n#26L]                                                            Project [id#2, _extract_n#67L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#67L]
!   :- Project [id#2, nested#3.n AS _extract_n#67L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#67L AS n#26L]                                                            Project [id#2, _extract_n#67L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#67L]                                                    +- Project [id#2, _extract_n#68L AS _extract_n#67L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#68L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#67L AS n#26L]                                                               Project [id#2, _extract_n#68L AS n#26L]
!+- Project [id#2, _extract_n#68L AS _extract_n#67L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#68L]
!      :- Project [id#2, nested#3.n AS _extract_n#68L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#68L AS n#26L]                                                            Project [id#2, _extract_n#68L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#68L]                                                    :- Project [id#2, nested#3.n AS _extract_n#68L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#68L AS n#26L]                                                            Project [id#2, _extract_n#68L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#68L]
!   :- Project [id#2, nested#3.n AS _extract_n#68L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#68L AS n#26L]                                                            Project [id#2, _extract_n#68L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#68L]                                                    +- Project [id#2, _extract_n#69L AS _extract_n#68L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#69L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#68L AS n#26L]                                                               Project [id#2, _extract_n#69L AS n#26L]
!+- Project [id#2, _extract_n#69L AS _extract_n#68L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#69L]
!      :- Project [id#2, nested#3.n AS _extract_n#69L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#69L AS n#26L]                                                            Project [id#2, _extract_n#69L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#69L]                                                    :- Project [id#2, nested#3.n AS _extract_n#69L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#69L AS n#26L]                                                            Project [id#2, _extract_n#69L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#69L]
!   :- Project [id#2, nested#3.n AS _extract_n#69L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#69L AS n#26L]                                                            Project [id#2, _extract_n#69L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#69L]                                                    +- Project [id#2, _extract_n#70L AS _extract_n#69L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#70L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#69L AS n#26L]                                                               Project [id#2, _extract_n#70L AS n#26L]
!+- Project [id#2, _extract_n#70L AS _extract_n#69L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#70L]
!      :- Project [id#2, nested#3.n AS _extract_n#70L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#70L AS n#26L]                                                            Project [id#2, _extract_n#70L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#70L]                                                    :- Project [id#2, nested#3.n AS _extract_n#70L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#70L AS n#26L]                                                            Project [id#2, _extract_n#70L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#70L]
!   :- Project [id#2, nested#3.n AS _extract_n#70L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#70L AS n#26L]                                                            Project [id#2, _extract_n#70L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#70L]                                                    +- Project [id#2, _extract_n#71L AS _extract_n#70L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#71L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#70L AS n#26L]                                                               Project [id#2, _extract_n#71L AS n#26L]
!+- Project [id#2, _extract_n#71L AS _extract_n#70L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#71L]
!      :- Project [id#2, nested#3.n AS _extract_n#71L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#71L AS n#26L]                                                            Project [id#2, _extract_n#71L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#71L]                                                    :- Project [id#2, nested#3.n AS _extract_n#71L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#71L AS n#26L]                                                            Project [id#2, _extract_n#71L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#71L]
!   :- Project [id#2, nested#3.n AS _extract_n#71L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#71L AS n#26L]                                                            Project [id#2, _extract_n#71L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#71L]                                                    +- Project [id#2, _extract_n#72L AS _extract_n#71L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#72L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#71L AS n#26L]                                                               Project [id#2, _extract_n#72L AS n#26L]
!+- Project [id#2, _extract_n#72L AS _extract_n#71L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#72L]
!      :- Project [id#2, nested#3.n AS _extract_n#72L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#72L AS n#26L]                                                            Project [id#2, _extract_n#72L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#72L]                                                    :- Project [id#2, nested#3.n AS _extract_n#72L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#72L AS n#26L]                                                            Project [id#2, _extract_n#72L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#72L]
!   :- Project [id#2, nested#3.n AS _extract_n#72L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#72L AS n#26L]                                                            Project [id#2, _extract_n#72L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#72L]                                                    +- Project [id#2, _extract_n#73L AS _extract_n#72L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#73L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#72L AS n#26L]                                                               Project [id#2, _extract_n#73L AS n#26L]
!+- Project [id#2, _extract_n#73L AS _extract_n#72L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#73L]
!      :- Project [id#2, nested#3.n AS _extract_n#73L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#73L AS n#26L]                                                            Project [id#2, _extract_n#73L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#73L]                                                    :- Project [id#2, nested#3.n AS _extract_n#73L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#73L AS n#26L]                                                            Project [id#2, _extract_n#73L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#73L]
!   :- Project [id#2, nested#3.n AS _extract_n#73L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#73L AS n#26L]                                                            Project [id#2, _extract_n#73L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#73L]                                                    +- Project [id#2, _extract_n#74L AS _extract_n#73L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#74L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#73L AS n#26L]                                                               Project [id#2, _extract_n#74L AS n#26L]
!+- Project [id#2, _extract_n#74L AS _extract_n#73L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#74L]
!      :- Project [id#2, nested#3.n AS _extract_n#74L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#74L AS n#26L]                                                            Project [id#2, _extract_n#74L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#74L]                                                    :- Project [id#2, nested#3.n AS _extract_n#74L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#74L AS n#26L]                                                            Project [id#2, _extract_n#74L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#74L]
!   :- Project [id#2, nested#3.n AS _extract_n#74L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#74L AS n#26L]                                                            Project [id#2, _extract_n#74L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#74L]                                                    +- Project [id#2, _extract_n#75L AS _extract_n#74L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#75L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#74L AS n#26L]                                                               Project [id#2, _extract_n#75L AS n#26L]
!+- Project [id#2, _extract_n#75L AS _extract_n#74L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#75L]
!      :- Project [id#2, nested#3.n AS _extract_n#75L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#75L AS n#26L]                                                            Project [id#2, _extract_n#75L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#75L]                                                    :- Project [id#2, nested#3.n AS _extract_n#75L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#75L AS n#26L]                                                            Project [id#2, _extract_n#75L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#75L]
!   :- Project [id#2, nested#3.n AS _extract_n#75L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#75L AS n#26L]                                                            Project [id#2, _extract_n#75L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#75L]                                                    +- Project [id#2, _extract_n#76L AS _extract_n#75L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#76L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#75L AS n#26L]                                                               Project [id#2, _extract_n#76L AS n#26L]
!+- Project [id#2, _extract_n#76L AS _extract_n#75L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#76L]
!      :- Project [id#2, nested#3.n AS _extract_n#76L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#76L AS n#26L]                                                            Project [id#2, _extract_n#76L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#76L]                                                    :- Project [id#2, nested#3.n AS _extract_n#76L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#76L AS n#26L]                                                            Project [id#2, _extract_n#76L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#76L]
!   :- Project [id#2, nested#3.n AS _extract_n#76L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#76L AS n#26L]                                                            Project [id#2, _extract_n#76L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#76L]                                                    +- Project [id#2, _extract_n#77L AS _extract_n#76L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#77L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#76L AS n#26L]                                                               Project [id#2, _extract_n#77L AS n#26L]
!+- Project [id#2, _extract_n#77L AS _extract_n#76L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#77L]
!      :- Project [id#2, nested#3.n AS _extract_n#77L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#77L AS n#26L]                                                            Project [id#2, _extract_n#77L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#77L]                                                    :- Project [id#2, nested#3.n AS _extract_n#77L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#77L AS n#26L]                                                            Project [id#2, _extract_n#77L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#77L]
!   :- Project [id#2, nested#3.n AS _extract_n#77L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#77L AS n#26L]                                                            Project [id#2, _extract_n#77L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#77L]                                                    +- Project [id#2, _extract_n#78L AS _extract_n#77L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#78L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#77L AS n#26L]                                                               Project [id#2, _extract_n#78L AS n#26L]
!+- Project [id#2, _extract_n#78L AS _extract_n#77L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#78L]
!      :- Project [id#2, nested#3.n AS _extract_n#78L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#78L AS n#26L]                                                            Project [id#2, _extract_n#78L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#78L]                                                    :- Project [id#2, nested#3.n AS _extract_n#78L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:41 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#78L AS n#26L]                                                            Project [id#2, _extract_n#78L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#78L]
!   :- Project [id#2, nested#3.n AS _extract_n#78L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#78L AS n#26L]                                                            Project [id#2, _extract_n#78L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#78L]                                                    +- Project [id#2, _extract_n#79L AS _extract_n#78L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#79L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#78L AS n#26L]                                                               Project [id#2, _extract_n#79L AS n#26L]
!+- Project [id#2, _extract_n#79L AS _extract_n#78L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#79L]
!      :- Project [id#2, nested#3.n AS _extract_n#79L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#79L AS n#26L]                                                            Project [id#2, _extract_n#79L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#79L]                                                    :- Project [id#2, nested#3.n AS _extract_n#79L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#79L AS n#26L]                                                            Project [id#2, _extract_n#79L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#79L]
!   :- Project [id#2, nested#3.n AS _extract_n#79L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#79L AS n#26L]                                                            Project [id#2, _extract_n#79L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#79L]                                                    +- Project [id#2, _extract_n#80L AS _extract_n#79L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#80L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#79L AS n#26L]                                                               Project [id#2, _extract_n#80L AS n#26L]
!+- Project [id#2, _extract_n#80L AS _extract_n#79L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#80L]
!      :- Project [id#2, nested#3.n AS _extract_n#80L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#80L AS n#26L]                                                            Project [id#2, _extract_n#80L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#80L]                                                    :- Project [id#2, nested#3.n AS _extract_n#80L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#80L AS n#26L]                                                            Project [id#2, _extract_n#80L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#80L]
!   :- Project [id#2, nested#3.n AS _extract_n#80L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#80L AS n#26L]                                                            Project [id#2, _extract_n#80L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#80L]                                                    +- Project [id#2, _extract_n#81L AS _extract_n#80L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#81L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#80L AS n#26L]                                                               Project [id#2, _extract_n#81L AS n#26L]
!+- Project [id#2, _extract_n#81L AS _extract_n#80L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#81L]
!      :- Project [id#2, nested#3.n AS _extract_n#81L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#81L AS n#26L]                                                            Project [id#2, _extract_n#81L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#81L]                                                    :- Project [id#2, nested#3.n AS _extract_n#81L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#81L AS n#26L]                                                            Project [id#2, _extract_n#81L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#81L]
!   :- Project [id#2, nested#3.n AS _extract_n#81L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#81L AS n#26L]                                                            Project [id#2, _extract_n#81L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#81L]                                                    +- Project [id#2, _extract_n#82L AS _extract_n#81L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#82L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#81L AS n#26L]                                                               Project [id#2, _extract_n#82L AS n#26L]
!+- Project [id#2, _extract_n#82L AS _extract_n#81L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#82L]
!      :- Project [id#2, nested#3.n AS _extract_n#82L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#82L AS n#26L]                                                            Project [id#2, _extract_n#82L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#82L]                                                    :- Project [id#2, nested#3.n AS _extract_n#82L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#82L AS n#26L]                                                            Project [id#2, _extract_n#82L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#82L]
!   :- Project [id#2, nested#3.n AS _extract_n#82L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#82L AS n#26L]                                                            Project [id#2, _extract_n#82L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#82L]                                                    +- Project [id#2, _extract_n#83L AS _extract_n#82L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#83L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#82L AS n#26L]                                                               Project [id#2, _extract_n#83L AS n#26L]
!+- Project [id#2, _extract_n#83L AS _extract_n#82L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#83L]
!      :- Project [id#2, nested#3.n AS _extract_n#83L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#83L AS n#26L]                                                            Project [id#2, _extract_n#83L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#83L]                                                    :- Project [id#2, nested#3.n AS _extract_n#83L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#83L AS n#26L]                                                            Project [id#2, _extract_n#83L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#83L]
!   :- Project [id#2, nested#3.n AS _extract_n#83L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#83L AS n#26L]                                                            Project [id#2, _extract_n#83L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#83L]                                                    +- Project [id#2, _extract_n#84L AS _extract_n#83L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#84L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#83L AS n#26L]                                                               Project [id#2, _extract_n#84L AS n#26L]
!+- Project [id#2, _extract_n#84L AS _extract_n#83L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#84L]
!      :- Project [id#2, nested#3.n AS _extract_n#84L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#84L AS n#26L]                                                            Project [id#2, _extract_n#84L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#84L]                                                    :- Project [id#2, nested#3.n AS _extract_n#84L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#84L AS n#26L]                                                            Project [id#2, _extract_n#84L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#84L]
!   :- Project [id#2, nested#3.n AS _extract_n#84L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#84L AS n#26L]                                                            Project [id#2, _extract_n#84L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#84L]                                                    +- Project [id#2, _extract_n#85L AS _extract_n#84L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#85L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#84L AS n#26L]                                                               Project [id#2, _extract_n#85L AS n#26L]
!+- Project [id#2, _extract_n#85L AS _extract_n#84L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#85L]
!      :- Project [id#2, nested#3.n AS _extract_n#85L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#85L AS n#26L]                                                            Project [id#2, _extract_n#85L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#85L]                                                    :- Project [id#2, nested#3.n AS _extract_n#85L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#85L AS n#26L]                                                            Project [id#2, _extract_n#85L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#85L]
!   :- Project [id#2, nested#3.n AS _extract_n#85L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#85L AS n#26L]                                                            Project [id#2, _extract_n#85L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#85L]                                                    +- Project [id#2, _extract_n#86L AS _extract_n#85L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#86L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#85L AS n#26L]                                                               Project [id#2, _extract_n#86L AS n#26L]
!+- Project [id#2, _extract_n#86L AS _extract_n#85L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#86L]
!      :- Project [id#2, nested#3.n AS _extract_n#86L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#86L AS n#26L]                                                            Project [id#2, _extract_n#86L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#86L]                                                    :- Project [id#2, nested#3.n AS _extract_n#86L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#86L AS n#26L]                                                            Project [id#2, _extract_n#86L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#86L]
!   :- Project [id#2, nested#3.n AS _extract_n#86L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#86L AS n#26L]                                                            Project [id#2, _extract_n#86L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#86L]                                                    +- Project [id#2, _extract_n#87L AS _extract_n#86L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#87L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#86L AS n#26L]                                                               Project [id#2, _extract_n#87L AS n#26L]
!+- Project [id#2, _extract_n#87L AS _extract_n#86L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#87L]
!      :- Project [id#2, nested#3.n AS _extract_n#87L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#87L AS n#26L]                                                            Project [id#2, _extract_n#87L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#87L]                                                    :- Project [id#2, nested#3.n AS _extract_n#87L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#87L AS n#26L]                                                            Project [id#2, _extract_n#87L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#87L]
!   :- Project [id#2, nested#3.n AS _extract_n#87L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#87L AS n#26L]                                                            Project [id#2, _extract_n#87L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#87L]                                                    +- Project [id#2, _extract_n#88L AS _extract_n#87L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#88L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#87L AS n#26L]                                                               Project [id#2, _extract_n#88L AS n#26L]
!+- Project [id#2, _extract_n#88L AS _extract_n#87L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#88L]
!      :- Project [id#2, nested#3.n AS _extract_n#88L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#88L AS n#26L]                                                            Project [id#2, _extract_n#88L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#88L]                                                    :- Project [id#2, nested#3.n AS _extract_n#88L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#88L AS n#26L]                                                            Project [id#2, _extract_n#88L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#88L]
!   :- Project [id#2, nested#3.n AS _extract_n#88L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#88L AS n#26L]                                                            Project [id#2, _extract_n#88L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#88L]                                                    +- Project [id#2, _extract_n#89L AS _extract_n#88L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#89L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#88L AS n#26L]                                                               Project [id#2, _extract_n#89L AS n#26L]
!+- Project [id#2, _extract_n#89L AS _extract_n#88L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#89L]
!      :- Project [id#2, nested#3.n AS _extract_n#89L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#89L AS n#26L]                                                            Project [id#2, _extract_n#89L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#89L]                                                    :- Project [id#2, nested#3.n AS _extract_n#89L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#89L AS n#26L]                                                            Project [id#2, _extract_n#89L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#89L]
!   :- Project [id#2, nested#3.n AS _extract_n#89L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#89L AS n#26L]                                                            Project [id#2, _extract_n#89L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#89L]                                                    +- Project [id#2, _extract_n#90L AS _extract_n#89L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#90L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#89L AS n#26L]                                                               Project [id#2, _extract_n#90L AS n#26L]
!+- Project [id#2, _extract_n#90L AS _extract_n#89L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#90L]
!      :- Project [id#2, nested#3.n AS _extract_n#90L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#90L AS n#26L]                                                            Project [id#2, _extract_n#90L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#90L]                                                    :- Project [id#2, nested#3.n AS _extract_n#90L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#90L AS n#26L]                                                            Project [id#2, _extract_n#90L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#90L]
!   :- Project [id#2, nested#3.n AS _extract_n#90L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#90L AS n#26L]                                                            Project [id#2, _extract_n#90L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#90L]                                                    +- Project [id#2, _extract_n#91L AS _extract_n#90L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#91L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#90L AS n#26L]                                                               Project [id#2, _extract_n#91L AS n#26L]
!+- Project [id#2, _extract_n#91L AS _extract_n#90L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#91L]
!      :- Project [id#2, nested#3.n AS _extract_n#91L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#91L AS n#26L]                                                            Project [id#2, _extract_n#91L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#91L]                                                    :- Project [id#2, nested#3.n AS _extract_n#91L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#91L AS n#26L]                                                            Project [id#2, _extract_n#91L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#91L]
!   :- Project [id#2, nested#3.n AS _extract_n#91L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#91L AS n#26L]                                                            Project [id#2, _extract_n#91L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#91L]                                                    +- Project [id#2, _extract_n#92L AS _extract_n#91L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#92L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#91L AS n#26L]                                                               Project [id#2, _extract_n#92L AS n#26L]
!+- Project [id#2, _extract_n#92L AS _extract_n#91L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#92L]
!      :- Project [id#2, nested#3.n AS _extract_n#92L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#92L AS n#26L]                                                            Project [id#2, _extract_n#92L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#92L]                                                    :- Project [id#2, nested#3.n AS _extract_n#92L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#92L AS n#26L]                                                            Project [id#2, _extract_n#92L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#92L]
!   :- Project [id#2, nested#3.n AS _extract_n#92L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#92L AS n#26L]                                                            Project [id#2, _extract_n#92L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#92L]                                                    +- Project [id#2, _extract_n#93L AS _extract_n#92L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#93L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#92L AS n#26L]                                                               Project [id#2, _extract_n#93L AS n#26L]
!+- Project [id#2, _extract_n#93L AS _extract_n#92L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#93L]
!      :- Project [id#2, nested#3.n AS _extract_n#93L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#93L AS n#26L]                                                            Project [id#2, _extract_n#93L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#93L]                                                    :- Project [id#2, nested#3.n AS _extract_n#93L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#93L AS n#26L]                                                            Project [id#2, _extract_n#93L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#93L]
!   :- Project [id#2, nested#3.n AS _extract_n#93L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#93L AS n#26L]                                                            Project [id#2, _extract_n#93L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#93L]                                                    +- Project [id#2, _extract_n#94L AS _extract_n#93L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#94L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#93L AS n#26L]                                                               Project [id#2, _extract_n#94L AS n#26L]
!+- Project [id#2, _extract_n#94L AS _extract_n#93L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#94L]
!      :- Project [id#2, nested#3.n AS _extract_n#94L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#94L AS n#26L]                                                            Project [id#2, _extract_n#94L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#94L]                                                    :- Project [id#2, nested#3.n AS _extract_n#94L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#94L AS n#26L]                                                            Project [id#2, _extract_n#94L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#94L]
!   :- Project [id#2, nested#3.n AS _extract_n#94L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#94L AS n#26L]                                                            Project [id#2, _extract_n#94L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#94L]                                                    +- Project [id#2, _extract_n#95L AS _extract_n#94L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#95L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#94L AS n#26L]                                                               Project [id#2, _extract_n#95L AS n#26L]
!+- Project [id#2, _extract_n#95L AS _extract_n#94L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#95L]
!      :- Project [id#2, nested#3.n AS _extract_n#95L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#95L AS n#26L]                                                            Project [id#2, _extract_n#95L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#95L]                                                    :- Project [id#2, nested#3.n AS _extract_n#95L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#95L AS n#26L]                                                            Project [id#2, _extract_n#95L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#95L]
!   :- Project [id#2, nested#3.n AS _extract_n#95L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#95L AS n#26L]                                                            Project [id#2, _extract_n#95L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#95L]                                                    +- Project [id#2, _extract_n#96L AS _extract_n#95L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#96L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#95L AS n#26L]                                                               Project [id#2, _extract_n#96L AS n#26L]
!+- Project [id#2, _extract_n#96L AS _extract_n#95L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#96L]
!      :- Project [id#2, nested#3.n AS _extract_n#96L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#96L AS n#26L]                                                            Project [id#2, _extract_n#96L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#96L]                                                    :- Project [id#2, nested#3.n AS _extract_n#96L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#96L AS n#26L]                                                            Project [id#2, _extract_n#96L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#96L]
!   :- Project [id#2, nested#3.n AS _extract_n#96L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#96L AS n#26L]                                                            Project [id#2, _extract_n#96L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#96L]                                                    +- Project [id#2, _extract_n#97L AS _extract_n#96L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#97L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#96L AS n#26L]                                                               Project [id#2, _extract_n#97L AS n#26L]
!+- Project [id#2, _extract_n#97L AS _extract_n#96L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#97L]
!      :- Project [id#2, nested#3.n AS _extract_n#97L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#97L AS n#26L]                                                            Project [id#2, _extract_n#97L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#97L]                                                    :- Project [id#2, nested#3.n AS _extract_n#97L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#97L AS n#26L]                                                            Project [id#2, _extract_n#97L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#97L]
!   :- Project [id#2, nested#3.n AS _extract_n#97L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#97L AS n#26L]                                                            Project [id#2, _extract_n#97L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#97L]                                                    +- Project [id#2, _extract_n#98L AS _extract_n#97L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#98L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:42 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#97L AS n#26L]                                                               Project [id#2, _extract_n#98L AS n#26L]
!+- Project [id#2, _extract_n#98L AS _extract_n#97L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#98L]
!      :- Project [id#2, nested#3.n AS _extract_n#98L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#98L AS n#26L]                                                            Project [id#2, _extract_n#98L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#98L]                                                    :- Project [id#2, nested#3.n AS _extract_n#98L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#98L AS n#26L]                                                            Project [id#2, _extract_n#98L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#98L]
!   :- Project [id#2, nested#3.n AS _extract_n#98L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#98L AS n#26L]                                                            Project [id#2, _extract_n#98L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#98L]                                                    +- Project [id#2, _extract_n#99L AS _extract_n#98L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#99L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#98L AS n#26L]                                                               Project [id#2, _extract_n#99L AS n#26L]
!+- Project [id#2, _extract_n#99L AS _extract_n#98L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#99L]
!      :- Project [id#2, nested#3.n AS _extract_n#99L]                                                    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#99L AS n#26L]                                                            Project [id#2, _extract_n#99L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#99L]                                                    :- Project [id#2, nested#3.n AS _extract_n#99L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#99L AS n#26L]                                                            Project [id#2, _extract_n#99L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#99L]
!   :- Project [id#2, nested#3.n AS _extract_n#99L]                                                    +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#99L AS n#26L]                                                            Project [id#2, _extract_n#99L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#99L]                                                    +- Project [id#2, _extract_n#100L AS _extract_n#99L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#100L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#99L AS n#26L]                                                               Project [id#2, _extract_n#100L AS n#26L]
!+- Project [id#2, _extract_n#100L AS _extract_n#99L]                                                  +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#100L]
!      :- Project [id#2, nested#3.n AS _extract_n#100L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#100L AS n#26L]                                                           Project [id#2, _extract_n#100L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#100L]                                                   :- Project [id#2, nested#3.n AS _extract_n#100L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#100L AS n#26L]                                                           Project [id#2, _extract_n#100L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#100L]
!   :- Project [id#2, nested#3.n AS _extract_n#100L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#100L AS n#26L]                                                           Project [id#2, _extract_n#100L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#100L]                                                   +- Project [id#2, _extract_n#101L AS _extract_n#100L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#101L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#100L AS n#26L]                                                              Project [id#2, _extract_n#101L AS n#26L]
!+- Project [id#2, _extract_n#101L AS _extract_n#100L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#101L]
!      :- Project [id#2, nested#3.n AS _extract_n#101L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#101L AS n#26L]                                                           Project [id#2, _extract_n#101L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#101L]                                                   :- Project [id#2, nested#3.n AS _extract_n#101L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#101L AS n#26L]                                                           Project [id#2, _extract_n#101L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#101L]
!   :- Project [id#2, nested#3.n AS _extract_n#101L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#101L AS n#26L]                                                           Project [id#2, _extract_n#101L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#101L]                                                   +- Project [id#2, _extract_n#102L AS _extract_n#101L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#102L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#101L AS n#26L]                                                              Project [id#2, _extract_n#102L AS n#26L]
!+- Project [id#2, _extract_n#102L AS _extract_n#101L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#102L]
!      :- Project [id#2, nested#3.n AS _extract_n#102L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#102L AS n#26L]                                                           Project [id#2, _extract_n#102L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#102L]                                                   :- Project [id#2, nested#3.n AS _extract_n#102L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#102L AS n#26L]                                                           Project [id#2, _extract_n#102L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#102L]
!   :- Project [id#2, nested#3.n AS _extract_n#102L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#102L AS n#26L]                                                           Project [id#2, _extract_n#102L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#102L]                                                   +- Project [id#2, _extract_n#103L AS _extract_n#102L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#103L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#102L AS n#26L]                                                              Project [id#2, _extract_n#103L AS n#26L]
!+- Project [id#2, _extract_n#103L AS _extract_n#102L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#103L]
!      :- Project [id#2, nested#3.n AS _extract_n#103L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#103L AS n#26L]                                                           Project [id#2, _extract_n#103L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#103L]                                                   :- Project [id#2, nested#3.n AS _extract_n#103L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#103L AS n#26L]                                                           Project [id#2, _extract_n#103L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#103L]
!   :- Project [id#2, nested#3.n AS _extract_n#103L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#103L AS n#26L]                                                           Project [id#2, _extract_n#103L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#103L]                                                   +- Project [id#2, _extract_n#104L AS _extract_n#103L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#104L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#103L AS n#26L]                                                              Project [id#2, _extract_n#104L AS n#26L]
!+- Project [id#2, _extract_n#104L AS _extract_n#103L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#104L]
!      :- Project [id#2, nested#3.n AS _extract_n#104L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#104L AS n#26L]                                                           Project [id#2, _extract_n#104L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#104L]                                                   :- Project [id#2, nested#3.n AS _extract_n#104L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#104L AS n#26L]                                                           Project [id#2, _extract_n#104L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#104L]
!   :- Project [id#2, nested#3.n AS _extract_n#104L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#104L AS n#26L]                                                           Project [id#2, _extract_n#104L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#104L]                                                   +- Project [id#2, _extract_n#105L AS _extract_n#104L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#105L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#104L AS n#26L]                                                              Project [id#2, _extract_n#105L AS n#26L]
!+- Project [id#2, _extract_n#105L AS _extract_n#104L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#105L]
!      :- Project [id#2, nested#3.n AS _extract_n#105L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#105L AS n#26L]                                                           Project [id#2, _extract_n#105L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#105L]                                                   :- Project [id#2, nested#3.n AS _extract_n#105L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#105L AS n#26L]                                                           Project [id#2, _extract_n#105L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#105L]
!   :- Project [id#2, nested#3.n AS _extract_n#105L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#105L AS n#26L]                                                           Project [id#2, _extract_n#105L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#105L]                                                   +- Project [id#2, _extract_n#106L AS _extract_n#105L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#106L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#105L AS n#26L]                                                              Project [id#2, _extract_n#106L AS n#26L]
!+- Project [id#2, _extract_n#106L AS _extract_n#105L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#106L]
!      :- Project [id#2, nested#3.n AS _extract_n#106L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#106L AS n#26L]                                                           Project [id#2, _extract_n#106L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#106L]                                                   :- Project [id#2, nested#3.n AS _extract_n#106L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#106L AS n#26L]                                                           Project [id#2, _extract_n#106L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#106L]
!   :- Project [id#2, nested#3.n AS _extract_n#106L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#106L AS n#26L]                                                           Project [id#2, _extract_n#106L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#106L]                                                   +- Project [id#2, _extract_n#107L AS _extract_n#106L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#107L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#106L AS n#26L]                                                              Project [id#2, _extract_n#107L AS n#26L]
!+- Project [id#2, _extract_n#107L AS _extract_n#106L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#107L]
!      :- Project [id#2, nested#3.n AS _extract_n#107L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#107L AS n#26L]                                                           Project [id#2, _extract_n#107L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#107L]                                                   :- Project [id#2, nested#3.n AS _extract_n#107L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#107L AS n#26L]                                                           Project [id#2, _extract_n#107L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#107L]
!   :- Project [id#2, nested#3.n AS _extract_n#107L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#107L AS n#26L]                                                           Project [id#2, _extract_n#107L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#107L]                                                   +- Project [id#2, _extract_n#108L AS _extract_n#107L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#108L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#107L AS n#26L]                                                              Project [id#2, _extract_n#108L AS n#26L]
!+- Project [id#2, _extract_n#108L AS _extract_n#107L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#108L]
!      :- Project [id#2, nested#3.n AS _extract_n#108L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#108L AS n#26L]                                                           Project [id#2, _extract_n#108L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#108L]                                                   :- Project [id#2, nested#3.n AS _extract_n#108L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#108L AS n#26L]                                                           Project [id#2, _extract_n#108L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#108L]
!   :- Project [id#2, nested#3.n AS _extract_n#108L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#108L AS n#26L]                                                           Project [id#2, _extract_n#108L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#108L]                                                   +- Project [id#2, _extract_n#109L AS _extract_n#108L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#109L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#108L AS n#26L]                                                              Project [id#2, _extract_n#109L AS n#26L]
!+- Project [id#2, _extract_n#109L AS _extract_n#108L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#109L]
!      :- Project [id#2, nested#3.n AS _extract_n#109L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#109L AS n#26L]                                                           Project [id#2, _extract_n#109L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#109L]                                                   :- Project [id#2, nested#3.n AS _extract_n#109L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#109L AS n#26L]                                                           Project [id#2, _extract_n#109L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#109L]
!   :- Project [id#2, nested#3.n AS _extract_n#109L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#109L AS n#26L]                                                           Project [id#2, _extract_n#109L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#109L]                                                   +- Project [id#2, _extract_n#110L AS _extract_n#109L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#110L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#109L AS n#26L]                                                              Project [id#2, _extract_n#110L AS n#26L]
!+- Project [id#2, _extract_n#110L AS _extract_n#109L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#110L]
!      :- Project [id#2, nested#3.n AS _extract_n#110L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#110L AS n#26L]                                                           Project [id#2, _extract_n#110L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#110L]                                                   :- Project [id#2, nested#3.n AS _extract_n#110L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#110L AS n#26L]                                                           Project [id#2, _extract_n#110L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#110L]
!   :- Project [id#2, nested#3.n AS _extract_n#110L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#110L AS n#26L]                                                           Project [id#2, _extract_n#110L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#110L]                                                   +- Project [id#2, _extract_n#111L AS _extract_n#110L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#111L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#110L AS n#26L]                                                              Project [id#2, _extract_n#111L AS n#26L]
!+- Project [id#2, _extract_n#111L AS _extract_n#110L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#111L]
!      :- Project [id#2, nested#3.n AS _extract_n#111L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#111L AS n#26L]                                                           Project [id#2, _extract_n#111L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#111L]                                                   :- Project [id#2, nested#3.n AS _extract_n#111L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#111L AS n#26L]                                                           Project [id#2, _extract_n#111L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#111L]
!   :- Project [id#2, nested#3.n AS _extract_n#111L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#111L AS n#26L]                                                           Project [id#2, _extract_n#111L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#111L]                                                   +- Project [id#2, _extract_n#112L AS _extract_n#111L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#112L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#111L AS n#26L]                                                              Project [id#2, _extract_n#112L AS n#26L]
!+- Project [id#2, _extract_n#112L AS _extract_n#111L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#112L]
!      :- Project [id#2, nested#3.n AS _extract_n#112L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#112L AS n#26L]                                                           Project [id#2, _extract_n#112L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#112L]                                                   :- Project [id#2, nested#3.n AS _extract_n#112L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#112L AS n#26L]                                                           Project [id#2, _extract_n#112L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#112L]
!   :- Project [id#2, nested#3.n AS _extract_n#112L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#112L AS n#26L]                                                           Project [id#2, _extract_n#112L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#112L]                                                   +- Project [id#2, _extract_n#113L AS _extract_n#112L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#113L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#112L AS n#26L]                                                              Project [id#2, _extract_n#113L AS n#26L]
!+- Project [id#2, _extract_n#113L AS _extract_n#112L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#113L]
!      :- Project [id#2, nested#3.n AS _extract_n#113L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#113L AS n#26L]                                                           Project [id#2, _extract_n#113L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#113L]                                                   :- Project [id#2, nested#3.n AS _extract_n#113L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#113L AS n#26L]                                                           Project [id#2, _extract_n#113L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#113L]
!   :- Project [id#2, nested#3.n AS _extract_n#113L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#113L AS n#26L]                                                           Project [id#2, _extract_n#113L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#113L]                                                   +- Project [id#2, _extract_n#114L AS _extract_n#113L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#114L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#113L AS n#26L]                                                              Project [id#2, _extract_n#114L AS n#26L]
!+- Project [id#2, _extract_n#114L AS _extract_n#113L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#114L]
!      :- Project [id#2, nested#3.n AS _extract_n#114L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#114L AS n#26L]                                                           Project [id#2, _extract_n#114L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#114L]                                                   :- Project [id#2, nested#3.n AS _extract_n#114L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#114L AS n#26L]                                                           Project [id#2, _extract_n#114L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#114L]
!   :- Project [id#2, nested#3.n AS _extract_n#114L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#114L AS n#26L]                                                           Project [id#2, _extract_n#114L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#114L]                                                   +- Project [id#2, _extract_n#115L AS _extract_n#114L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#115L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#114L AS n#26L]                                                              Project [id#2, _extract_n#115L AS n#26L]
!+- Project [id#2, _extract_n#115L AS _extract_n#114L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#115L]
!      :- Project [id#2, nested#3.n AS _extract_n#115L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#115L AS n#26L]                                                           Project [id#2, _extract_n#115L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#115L]                                                   :- Project [id#2, nested#3.n AS _extract_n#115L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#115L AS n#26L]                                                           Project [id#2, _extract_n#115L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#115L]
!   :- Project [id#2, nested#3.n AS _extract_n#115L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#115L AS n#26L]                                                           Project [id#2, _extract_n#115L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#115L]                                                   +- Project [id#2, _extract_n#116L AS _extract_n#115L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#116L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#115L AS n#26L]                                                              Project [id#2, _extract_n#116L AS n#26L]
!+- Project [id#2, _extract_n#116L AS _extract_n#115L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#116L]
!      :- Project [id#2, nested#3.n AS _extract_n#116L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#116L AS n#26L]                                                           Project [id#2, _extract_n#116L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#116L]                                                   :- Project [id#2, nested#3.n AS _extract_n#116L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#116L AS n#26L]                                                           Project [id#2, _extract_n#116L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#116L]
!   :- Project [id#2, nested#3.n AS _extract_n#116L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#116L AS n#26L]                                                           Project [id#2, _extract_n#116L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#116L]                                                   +- Project [id#2, _extract_n#117L AS _extract_n#116L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#117L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#116L AS n#26L]                                                              Project [id#2, _extract_n#117L AS n#26L]
!+- Project [id#2, _extract_n#117L AS _extract_n#116L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#117L]
!      :- Project [id#2, nested#3.n AS _extract_n#117L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#117L AS n#26L]                                                           Project [id#2, _extract_n#117L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#117L]                                                   :- Project [id#2, nested#3.n AS _extract_n#117L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:43 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#117L AS n#26L]                                                           Project [id#2, _extract_n#117L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#117L]
!   :- Project [id#2, nested#3.n AS _extract_n#117L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#117L AS n#26L]                                                           Project [id#2, _extract_n#117L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#117L]                                                   +- Project [id#2, _extract_n#118L AS _extract_n#117L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#118L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#117L AS n#26L]                                                              Project [id#2, _extract_n#118L AS n#26L]
!+- Project [id#2, _extract_n#118L AS _extract_n#117L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#118L]
!      :- Project [id#2, nested#3.n AS _extract_n#118L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#118L AS n#26L]                                                           Project [id#2, _extract_n#118L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#118L]                                                   :- Project [id#2, nested#3.n AS _extract_n#118L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#118L AS n#26L]                                                           Project [id#2, _extract_n#118L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#118L]
!   :- Project [id#2, nested#3.n AS _extract_n#118L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#118L AS n#26L]                                                           Project [id#2, _extract_n#118L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#118L]                                                   +- Project [id#2, _extract_n#119L AS _extract_n#118L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#119L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#118L AS n#26L]                                                              Project [id#2, _extract_n#119L AS n#26L]
!+- Project [id#2, _extract_n#119L AS _extract_n#118L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#119L]
!      :- Project [id#2, nested#3.n AS _extract_n#119L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#119L AS n#26L]                                                           Project [id#2, _extract_n#119L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#119L]                                                   :- Project [id#2, nested#3.n AS _extract_n#119L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#119L AS n#26L]                                                           Project [id#2, _extract_n#119L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#119L]
!   :- Project [id#2, nested#3.n AS _extract_n#119L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#119L AS n#26L]                                                           Project [id#2, _extract_n#119L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#119L]                                                   +- Project [id#2, _extract_n#120L AS _extract_n#119L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#120L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#119L AS n#26L]                                                              Project [id#2, _extract_n#120L AS n#26L]
!+- Project [id#2, _extract_n#120L AS _extract_n#119L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#120L]
!      :- Project [id#2, nested#3.n AS _extract_n#120L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#120L AS n#26L]                                                           Project [id#2, _extract_n#120L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#120L]                                                   :- Project [id#2, nested#3.n AS _extract_n#120L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#120L AS n#26L]                                                           Project [id#2, _extract_n#120L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#120L]
!   :- Project [id#2, nested#3.n AS _extract_n#120L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#120L AS n#26L]                                                           Project [id#2, _extract_n#120L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#120L]                                                   +- Project [id#2, _extract_n#121L AS _extract_n#120L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#121L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#120L AS n#26L]                                                              Project [id#2, _extract_n#121L AS n#26L]
!+- Project [id#2, _extract_n#121L AS _extract_n#120L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#121L]
!      :- Project [id#2, nested#3.n AS _extract_n#121L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#121L AS n#26L]                                                           Project [id#2, _extract_n#121L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#121L]                                                   :- Project [id#2, nested#3.n AS _extract_n#121L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#121L AS n#26L]                                                           Project [id#2, _extract_n#121L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#121L]
!   :- Project [id#2, nested#3.n AS _extract_n#121L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#121L AS n#26L]                                                           Project [id#2, _extract_n#121L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#121L]                                                   +- Project [id#2, _extract_n#122L AS _extract_n#121L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#122L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#121L AS n#26L]                                                              Project [id#2, _extract_n#122L AS n#26L]
!+- Project [id#2, _extract_n#122L AS _extract_n#121L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#122L]
!      :- Project [id#2, nested#3.n AS _extract_n#122L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#122L AS n#26L]                                                           Project [id#2, _extract_n#122L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#122L]                                                   :- Project [id#2, nested#3.n AS _extract_n#122L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#122L AS n#26L]                                                           Project [id#2, _extract_n#122L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#122L]
!   :- Project [id#2, nested#3.n AS _extract_n#122L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#122L AS n#26L]                                                           Project [id#2, _extract_n#122L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#122L]                                                   +- Project [id#2, _extract_n#123L AS _extract_n#122L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#123L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#122L AS n#26L]                                                              Project [id#2, _extract_n#123L AS n#26L]
!+- Project [id#2, _extract_n#123L AS _extract_n#122L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#123L]
!      :- Project [id#2, nested#3.n AS _extract_n#123L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#123L AS n#26L]                                                           Project [id#2, _extract_n#123L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#123L]                                                   :- Project [id#2, nested#3.n AS _extract_n#123L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#123L AS n#26L]                                                           Project [id#2, _extract_n#123L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#123L]
!   :- Project [id#2, nested#3.n AS _extract_n#123L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#123L AS n#26L]                                                           Project [id#2, _extract_n#123L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#123L]                                                   +- Project [id#2, _extract_n#124L AS _extract_n#123L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#124L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#123L AS n#26L]                                                              Project [id#2, _extract_n#124L AS n#26L]
!+- Project [id#2, _extract_n#124L AS _extract_n#123L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#124L]
!      :- Project [id#2, nested#3.n AS _extract_n#124L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#124L AS n#26L]                                                           Project [id#2, _extract_n#124L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#124L]                                                   :- Project [id#2, nested#3.n AS _extract_n#124L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#124L AS n#26L]                                                           Project [id#2, _extract_n#124L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#124L]
!   :- Project [id#2, nested#3.n AS _extract_n#124L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#124L AS n#26L]                                                           Project [id#2, _extract_n#124L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#124L]                                                   +- Project [id#2, _extract_n#125L AS _extract_n#124L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#125L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#124L AS n#26L]                                                              Project [id#2, _extract_n#125L AS n#26L]
!+- Project [id#2, _extract_n#125L AS _extract_n#124L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#125L]
!      :- Project [id#2, nested#3.n AS _extract_n#125L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#125L AS n#26L]                                                           Project [id#2, _extract_n#125L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#125L]                                                   :- Project [id#2, nested#3.n AS _extract_n#125L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#125L AS n#26L]                                                           Project [id#2, _extract_n#125L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#125L]
!   :- Project [id#2, nested#3.n AS _extract_n#125L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#125L AS n#26L]                                                           Project [id#2, _extract_n#125L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#125L]                                                   +- Project [id#2, _extract_n#126L AS _extract_n#125L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#126L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#125L AS n#26L]                                                              Project [id#2, _extract_n#126L AS n#26L]
!+- Project [id#2, _extract_n#126L AS _extract_n#125L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#126L]
!      :- Project [id#2, nested#3.n AS _extract_n#126L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#126L AS n#26L]                                                           Project [id#2, _extract_n#126L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#126L]                                                   :- Project [id#2, nested#3.n AS _extract_n#126L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#126L AS n#26L]                                                           Project [id#2, _extract_n#126L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#126L]
!   :- Project [id#2, nested#3.n AS _extract_n#126L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#126L AS n#26L]                                                           Project [id#2, _extract_n#126L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#126L]                                                   +- Project [id#2, _extract_n#127L AS _extract_n#126L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#127L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#126L AS n#26L]                                                              Project [id#2, _extract_n#127L AS n#26L]
!+- Project [id#2, _extract_n#127L AS _extract_n#126L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#127L]
!      :- Project [id#2, nested#3.n AS _extract_n#127L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#127L AS n#26L]                                                           Project [id#2, _extract_n#127L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#127L]                                                   :- Project [id#2, nested#3.n AS _extract_n#127L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#127L AS n#26L]                                                           Project [id#2, _extract_n#127L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#127L]
!   :- Project [id#2, nested#3.n AS _extract_n#127L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#127L AS n#26L]                                                           Project [id#2, _extract_n#127L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#127L]                                                   +- Project [id#2, _extract_n#128L AS _extract_n#127L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#128L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#127L AS n#26L]                                                              Project [id#2, _extract_n#128L AS n#26L]
!+- Project [id#2, _extract_n#128L AS _extract_n#127L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#128L]
!      :- Project [id#2, nested#3.n AS _extract_n#128L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#128L AS n#26L]                                                           Project [id#2, _extract_n#128L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#128L]                                                   :- Project [id#2, nested#3.n AS _extract_n#128L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#128L AS n#26L]                                                           Project [id#2, _extract_n#128L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#128L]
!   :- Project [id#2, nested#3.n AS _extract_n#128L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#128L AS n#26L]                                                           Project [id#2, _extract_n#128L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#128L]                                                   +- Project [id#2, _extract_n#129L AS _extract_n#128L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#129L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#128L AS n#26L]                                                              Project [id#2, _extract_n#129L AS n#26L]
!+- Project [id#2, _extract_n#129L AS _extract_n#128L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#129L]
!      :- Project [id#2, nested#3.n AS _extract_n#129L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#129L AS n#26L]                                                           Project [id#2, _extract_n#129L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#129L]                                                   :- Project [id#2, nested#3.n AS _extract_n#129L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#129L AS n#26L]                                                           Project [id#2, _extract_n#129L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#129L]
!   :- Project [id#2, nested#3.n AS _extract_n#129L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#129L AS n#26L]                                                           Project [id#2, _extract_n#129L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#129L]                                                   +- Project [id#2, _extract_n#130L AS _extract_n#129L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#130L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#129L AS n#26L]                                                              Project [id#2, _extract_n#130L AS n#26L]
!+- Project [id#2, _extract_n#130L AS _extract_n#129L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#130L]
!      :- Project [id#2, nested#3.n AS _extract_n#130L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#130L AS n#26L]                                                           Project [id#2, _extract_n#130L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#130L]                                                   :- Project [id#2, nested#3.n AS _extract_n#130L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#130L AS n#26L]                                                           Project [id#2, _extract_n#130L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#130L]
!   :- Project [id#2, nested#3.n AS _extract_n#130L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#130L AS n#26L]                                                           Project [id#2, _extract_n#130L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#130L]                                                   +- Project [id#2, _extract_n#131L AS _extract_n#130L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#131L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#130L AS n#26L]                                                              Project [id#2, _extract_n#131L AS n#26L]
!+- Project [id#2, _extract_n#131L AS _extract_n#130L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#131L]
!      :- Project [id#2, nested#3.n AS _extract_n#131L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#131L AS n#26L]                                                           Project [id#2, _extract_n#131L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#131L]                                                   :- Project [id#2, nested#3.n AS _extract_n#131L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#131L AS n#26L]                                                           Project [id#2, _extract_n#131L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#131L]
!   :- Project [id#2, nested#3.n AS _extract_n#131L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#131L AS n#26L]                                                           Project [id#2, _extract_n#131L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#131L]                                                   +- Project [id#2, _extract_n#132L AS _extract_n#131L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#132L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#131L AS n#26L]                                                              Project [id#2, _extract_n#132L AS n#26L]
!+- Project [id#2, _extract_n#132L AS _extract_n#131L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#132L]
!      :- Project [id#2, nested#3.n AS _extract_n#132L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#132L AS n#26L]                                                           Project [id#2, _extract_n#132L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#132L]                                                   :- Project [id#2, nested#3.n AS _extract_n#132L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#132L AS n#26L]                                                           Project [id#2, _extract_n#132L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#132L]
!   :- Project [id#2, nested#3.n AS _extract_n#132L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#132L AS n#26L]                                                           Project [id#2, _extract_n#132L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#132L]                                                   +- Project [id#2, _extract_n#133L AS _extract_n#132L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#133L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#132L AS n#26L]                                                              Project [id#2, _extract_n#133L AS n#26L]
!+- Project [id#2, _extract_n#133L AS _extract_n#132L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#133L]
!      :- Project [id#2, nested#3.n AS _extract_n#133L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#133L AS n#26L]                                                           Project [id#2, _extract_n#133L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#133L]                                                   :- Project [id#2, nested#3.n AS _extract_n#133L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#133L AS n#26L]                                                           Project [id#2, _extract_n#133L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#133L]
!   :- Project [id#2, nested#3.n AS _extract_n#133L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#133L AS n#26L]                                                           Project [id#2, _extract_n#133L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#133L]                                                   +- Project [id#2, _extract_n#134L AS _extract_n#133L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#134L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#133L AS n#26L]                                                              Project [id#2, _extract_n#134L AS n#26L]
!+- Project [id#2, _extract_n#134L AS _extract_n#133L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#134L]
!      :- Project [id#2, nested#3.n AS _extract_n#134L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#134L AS n#26L]                                                           Project [id#2, _extract_n#134L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#134L]                                                   :- Project [id#2, nested#3.n AS _extract_n#134L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#134L AS n#26L]                                                           Project [id#2, _extract_n#134L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#134L]
!   :- Project [id#2, nested#3.n AS _extract_n#134L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#134L AS n#26L]                                                           Project [id#2, _extract_n#134L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#134L]                                                   +- Project [id#2, _extract_n#135L AS _extract_n#134L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#135L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#134L AS n#26L]                                                              Project [id#2, _extract_n#135L AS n#26L]
!+- Project [id#2, _extract_n#135L AS _extract_n#134L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#135L]
!      :- Project [id#2, nested#3.n AS _extract_n#135L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#135L AS n#26L]                                                           Project [id#2, _extract_n#135L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#135L]                                                   :- Project [id#2, nested#3.n AS _extract_n#135L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#135L AS n#26L]                                                           Project [id#2, _extract_n#135L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#135L]
!   :- Project [id#2, nested#3.n AS _extract_n#135L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#135L AS n#26L]                                                           Project [id#2, _extract_n#135L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#135L]                                                   +- Project [id#2, _extract_n#136L AS _extract_n#135L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#136L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#135L AS n#26L]                                                              Project [id#2, _extract_n#136L AS n#26L]
!+- Project [id#2, _extract_n#136L AS _extract_n#135L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#136L]
!      :- Project [id#2, nested#3.n AS _extract_n#136L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#136L AS n#26L]                                                           Project [id#2, _extract_n#136L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#136L]                                                   :- Project [id#2, nested#3.n AS _extract_n#136L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#136L AS n#26L]                                                           Project [id#2, _extract_n#136L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#136L]
!   :- Project [id#2, nested#3.n AS _extract_n#136L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#136L AS n#26L]                                                           Project [id#2, _extract_n#136L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#136L]                                                   +- Project [id#2, _extract_n#137L AS _extract_n#136L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#137L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#136L AS n#26L]                                                              Project [id#2, _extract_n#137L AS n#26L]
!+- Project [id#2, _extract_n#137L AS _extract_n#136L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#137L]
!      :- Project [id#2, nested#3.n AS _extract_n#137L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:44 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#137L AS n#26L]                                                           Project [id#2, _extract_n#137L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#137L]                                                   :- Project [id#2, nested#3.n AS _extract_n#137L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#137L AS n#26L]                                                           Project [id#2, _extract_n#137L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#137L]
!   :- Project [id#2, nested#3.n AS _extract_n#137L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#137L AS n#26L]                                                           Project [id#2, _extract_n#137L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#137L]                                                   +- Project [id#2, _extract_n#138L AS _extract_n#137L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#138L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#137L AS n#26L]                                                              Project [id#2, _extract_n#138L AS n#26L]
!+- Project [id#2, _extract_n#138L AS _extract_n#137L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#138L]
!      :- Project [id#2, nested#3.n AS _extract_n#138L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#138L AS n#26L]                                                           Project [id#2, _extract_n#138L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#138L]                                                   :- Project [id#2, nested#3.n AS _extract_n#138L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#138L AS n#26L]                                                           Project [id#2, _extract_n#138L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#138L]
!   :- Project [id#2, nested#3.n AS _extract_n#138L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#138L AS n#26L]                                                           Project [id#2, _extract_n#138L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#138L]                                                   +- Project [id#2, _extract_n#139L AS _extract_n#138L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#139L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#138L AS n#26L]                                                              Project [id#2, _extract_n#139L AS n#26L]
!+- Project [id#2, _extract_n#139L AS _extract_n#138L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#139L]
!      :- Project [id#2, nested#3.n AS _extract_n#139L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#139L AS n#26L]                                                           Project [id#2, _extract_n#139L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#139L]                                                   :- Project [id#2, nested#3.n AS _extract_n#139L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#139L AS n#26L]                                                           Project [id#2, _extract_n#139L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#139L]
!   :- Project [id#2, nested#3.n AS _extract_n#139L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#139L AS n#26L]                                                           Project [id#2, _extract_n#139L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#139L]                                                   +- Project [id#2, _extract_n#140L AS _extract_n#139L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#140L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#139L AS n#26L]                                                              Project [id#2, _extract_n#140L AS n#26L]
!+- Project [id#2, _extract_n#140L AS _extract_n#139L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#140L]
!      :- Project [id#2, nested#3.n AS _extract_n#140L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#140L AS n#26L]                                                           Project [id#2, _extract_n#140L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#140L]                                                   :- Project [id#2, nested#3.n AS _extract_n#140L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#140L AS n#26L]                                                           Project [id#2, _extract_n#140L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#140L]
!   :- Project [id#2, nested#3.n AS _extract_n#140L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#140L AS n#26L]                                                           Project [id#2, _extract_n#140L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#140L]                                                   +- Project [id#2, _extract_n#141L AS _extract_n#140L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#141L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#140L AS n#26L]                                                              Project [id#2, _extract_n#141L AS n#26L]
!+- Project [id#2, _extract_n#141L AS _extract_n#140L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#141L]
!      :- Project [id#2, nested#3.n AS _extract_n#141L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#141L AS n#26L]                                                           Project [id#2, _extract_n#141L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#141L]                                                   :- Project [id#2, nested#3.n AS _extract_n#141L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#141L AS n#26L]                                                           Project [id#2, _extract_n#141L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#141L]
!   :- Project [id#2, nested#3.n AS _extract_n#141L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#141L AS n#26L]                                                           Project [id#2, _extract_n#141L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#141L]                                                   +- Project [id#2, _extract_n#142L AS _extract_n#141L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#142L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#141L AS n#26L]                                                              Project [id#2, _extract_n#142L AS n#26L]
!+- Project [id#2, _extract_n#142L AS _extract_n#141L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#142L]
!      :- Project [id#2, nested#3.n AS _extract_n#142L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#142L AS n#26L]                                                           Project [id#2, _extract_n#142L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#142L]                                                   :- Project [id#2, nested#3.n AS _extract_n#142L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#142L AS n#26L]                                                           Project [id#2, _extract_n#142L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#142L]
!   :- Project [id#2, nested#3.n AS _extract_n#142L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#142L AS n#26L]                                                           Project [id#2, _extract_n#142L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#142L]                                                   +- Project [id#2, _extract_n#143L AS _extract_n#142L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#143L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#142L AS n#26L]                                                              Project [id#2, _extract_n#143L AS n#26L]
!+- Project [id#2, _extract_n#143L AS _extract_n#142L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#143L]
!      :- Project [id#2, nested#3.n AS _extract_n#143L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#143L AS n#26L]                                                           Project [id#2, _extract_n#143L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#143L]                                                   :- Project [id#2, nested#3.n AS _extract_n#143L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#143L AS n#26L]                                                           Project [id#2, _extract_n#143L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#143L]
!   :- Project [id#2, nested#3.n AS _extract_n#143L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#143L AS n#26L]                                                           Project [id#2, _extract_n#143L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#143L]                                                   +- Project [id#2, _extract_n#144L AS _extract_n#143L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#144L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#143L AS n#26L]                                                              Project [id#2, _extract_n#144L AS n#26L]
!+- Project [id#2, _extract_n#144L AS _extract_n#143L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#144L]
!      :- Project [id#2, nested#3.n AS _extract_n#144L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#144L AS n#26L]                                                           Project [id#2, _extract_n#144L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#144L]                                                   :- Project [id#2, nested#3.n AS _extract_n#144L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#144L AS n#26L]                                                           Project [id#2, _extract_n#144L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#144L]
!   :- Project [id#2, nested#3.n AS _extract_n#144L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#144L AS n#26L]                                                           Project [id#2, _extract_n#144L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#144L]                                                   +- Project [id#2, _extract_n#145L AS _extract_n#144L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#145L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#144L AS n#26L]                                                              Project [id#2, _extract_n#145L AS n#26L]
!+- Project [id#2, _extract_n#145L AS _extract_n#144L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#145L]
!      :- Project [id#2, nested#3.n AS _extract_n#145L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#145L AS n#26L]                                                           Project [id#2, _extract_n#145L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#145L]                                                   :- Project [id#2, nested#3.n AS _extract_n#145L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#145L AS n#26L]                                                           Project [id#2, _extract_n#145L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#145L]
!   :- Project [id#2, nested#3.n AS _extract_n#145L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#145L AS n#26L]                                                           Project [id#2, _extract_n#145L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#145L]                                                   +- Project [id#2, _extract_n#146L AS _extract_n#145L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#146L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#145L AS n#26L]                                                              Project [id#2, _extract_n#146L AS n#26L]
!+- Project [id#2, _extract_n#146L AS _extract_n#145L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#146L]
!      :- Project [id#2, nested#3.n AS _extract_n#146L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#146L AS n#26L]                                                           Project [id#2, _extract_n#146L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#146L]                                                   :- Project [id#2, nested#3.n AS _extract_n#146L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#146L AS n#26L]                                                           Project [id#2, _extract_n#146L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#146L]
!   :- Project [id#2, nested#3.n AS _extract_n#146L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#146L AS n#26L]                                                           Project [id#2, _extract_n#146L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#146L]                                                   +- Project [id#2, _extract_n#147L AS _extract_n#146L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#147L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#146L AS n#26L]                                                              Project [id#2, _extract_n#147L AS n#26L]
!+- Project [id#2, _extract_n#147L AS _extract_n#146L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#147L]
!      :- Project [id#2, nested#3.n AS _extract_n#147L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#147L AS n#26L]                                                           Project [id#2, _extract_n#147L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#147L]                                                   :- Project [id#2, nested#3.n AS _extract_n#147L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#147L AS n#26L]                                                           Project [id#2, _extract_n#147L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#147L]
!   :- Project [id#2, nested#3.n AS _extract_n#147L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#147L AS n#26L]                                                           Project [id#2, _extract_n#147L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#147L]                                                   +- Project [id#2, _extract_n#148L AS _extract_n#147L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#148L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#147L AS n#26L]                                                              Project [id#2, _extract_n#148L AS n#26L]
!+- Project [id#2, _extract_n#148L AS _extract_n#147L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#148L]
!      :- Project [id#2, nested#3.n AS _extract_n#148L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#148L AS n#26L]                                                           Project [id#2, _extract_n#148L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#148L]                                                   :- Project [id#2, nested#3.n AS _extract_n#148L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#148L AS n#26L]                                                           Project [id#2, _extract_n#148L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#148L]
!   :- Project [id#2, nested#3.n AS _extract_n#148L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#148L AS n#26L]                                                           Project [id#2, _extract_n#148L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#148L]                                                   +- Project [id#2, _extract_n#149L AS _extract_n#148L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#149L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#148L AS n#26L]                                                              Project [id#2, _extract_n#149L AS n#26L]
!+- Project [id#2, _extract_n#149L AS _extract_n#148L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#149L]
!      :- Project [id#2, nested#3.n AS _extract_n#149L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#149L AS n#26L]                                                           Project [id#2, _extract_n#149L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#149L]                                                   :- Project [id#2, nested#3.n AS _extract_n#149L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#149L AS n#26L]                                                           Project [id#2, _extract_n#149L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#149L]
!   :- Project [id#2, nested#3.n AS _extract_n#149L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#149L AS n#26L]                                                           Project [id#2, _extract_n#149L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#149L]                                                   +- Project [id#2, _extract_n#150L AS _extract_n#149L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#150L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#149L AS n#26L]                                                              Project [id#2, _extract_n#150L AS n#26L]
!+- Project [id#2, _extract_n#150L AS _extract_n#149L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#150L]
!      :- Project [id#2, nested#3.n AS _extract_n#150L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#150L AS n#26L]                                                           Project [id#2, _extract_n#150L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#150L]                                                   :- Project [id#2, nested#3.n AS _extract_n#150L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#150L AS n#26L]                                                           Project [id#2, _extract_n#150L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#150L]
!   :- Project [id#2, nested#3.n AS _extract_n#150L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#150L AS n#26L]                                                           Project [id#2, _extract_n#150L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#150L]                                                   +- Project [id#2, _extract_n#151L AS _extract_n#150L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#151L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#150L AS n#26L]                                                              Project [id#2, _extract_n#151L AS n#26L]
!+- Project [id#2, _extract_n#151L AS _extract_n#150L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#151L]
!      :- Project [id#2, nested#3.n AS _extract_n#151L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#151L AS n#26L]                                                           Project [id#2, _extract_n#151L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#151L]                                                   :- Project [id#2, nested#3.n AS _extract_n#151L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#151L AS n#26L]                                                           Project [id#2, _extract_n#151L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#151L]
!   :- Project [id#2, nested#3.n AS _extract_n#151L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#151L AS n#26L]                                                           Project [id#2, _extract_n#151L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#151L]                                                   +- Project [id#2, _extract_n#152L AS _extract_n#151L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#152L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#151L AS n#26L]                                                              Project [id#2, _extract_n#152L AS n#26L]
!+- Project [id#2, _extract_n#152L AS _extract_n#151L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#152L]
!      :- Project [id#2, nested#3.n AS _extract_n#152L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#152L AS n#26L]                                                           Project [id#2, _extract_n#152L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#152L]                                                   :- Project [id#2, nested#3.n AS _extract_n#152L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#152L AS n#26L]                                                           Project [id#2, _extract_n#152L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#152L]
!   :- Project [id#2, nested#3.n AS _extract_n#152L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#152L AS n#26L]                                                           Project [id#2, _extract_n#152L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#152L]                                                   +- Project [id#2, _extract_n#153L AS _extract_n#152L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#153L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#152L AS n#26L]                                                              Project [id#2, _extract_n#153L AS n#26L]
!+- Project [id#2, _extract_n#153L AS _extract_n#152L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#153L]
!      :- Project [id#2, nested#3.n AS _extract_n#153L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#153L AS n#26L]                                                           Project [id#2, _extract_n#153L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#153L]                                                   :- Project [id#2, nested#3.n AS _extract_n#153L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#153L AS n#26L]                                                           Project [id#2, _extract_n#153L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#153L]
!   :- Project [id#2, nested#3.n AS _extract_n#153L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#153L AS n#26L]                                                           Project [id#2, _extract_n#153L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#153L]                                                   +- Project [id#2, _extract_n#154L AS _extract_n#153L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#154L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#153L AS n#26L]                                                              Project [id#2, _extract_n#154L AS n#26L]
!+- Project [id#2, _extract_n#154L AS _extract_n#153L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#154L]
!      :- Project [id#2, nested#3.n AS _extract_n#154L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#154L AS n#26L]                                                           Project [id#2, _extract_n#154L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#154L]                                                   :- Project [id#2, nested#3.n AS _extract_n#154L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#154L AS n#26L]                                                           Project [id#2, _extract_n#154L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#154L]
!   :- Project [id#2, nested#3.n AS _extract_n#154L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#154L AS n#26L]                                                           Project [id#2, _extract_n#154L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#154L]                                                   +- Project [id#2, _extract_n#155L AS _extract_n#154L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#155L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#154L AS n#26L]                                                              Project [id#2, _extract_n#155L AS n#26L]
!+- Project [id#2, _extract_n#155L AS _extract_n#154L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#155L]
!      :- Project [id#2, nested#3.n AS _extract_n#155L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#155L AS n#26L]                                                           Project [id#2, _extract_n#155L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#155L]                                                   :- Project [id#2, nested#3.n AS _extract_n#155L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#155L AS n#26L]                                                           Project [id#2, _extract_n#155L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#155L]
!   :- Project [id#2, nested#3.n AS _extract_n#155L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#155L AS n#26L]                                                           Project [id#2, _extract_n#155L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#155L]                                                   +- Project [id#2, _extract_n#156L AS _extract_n#155L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#156L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#155L AS n#26L]                                                              Project [id#2, _extract_n#156L AS n#26L]
!+- Project [id#2, _extract_n#156L AS _extract_n#155L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#156L]
!      :- Project [id#2, nested#3.n AS _extract_n#156L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#156L AS n#26L]                                                           Project [id#2, _extract_n#156L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#156L]                                                   :- Project [id#2, nested#3.n AS _extract_n#156L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#156L AS n#26L]                                                           Project [id#2, _extract_n#156L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#156L]
!   :- Project [id#2, nested#3.n AS _extract_n#156L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#156L AS n#26L]                                                           Project [id#2, _extract_n#156L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#156L]                                                   +- Project [id#2, _extract_n#157L AS _extract_n#156L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#157L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#156L AS n#26L]                                                              Project [id#2, _extract_n#157L AS n#26L]
!+- Project [id#2, _extract_n#157L AS _extract_n#156L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#157L]
!      :- Project [id#2, nested#3.n AS _extract_n#157L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#157L AS n#26L]                                                           Project [id#2, _extract_n#157L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#157L]                                                   :- Project [id#2, nested#3.n AS _extract_n#157L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:45 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#157L AS n#26L]                                                           Project [id#2, _extract_n#157L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#157L]
!   :- Project [id#2, nested#3.n AS _extract_n#157L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#157L AS n#26L]                                                           Project [id#2, _extract_n#157L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#157L]                                                   +- Project [id#2, _extract_n#158L AS _extract_n#157L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#158L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  :        +- LocalTableScan <empty>, [id#2, nested#3]
!            +- LocalTableScan <empty>, [id#18]                                                           +- Project [id#18]
!                                                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                  +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#157L AS n#26L]                                                              Project [id#2, _extract_n#158L AS n#26L]
!+- Project [id#2, _extract_n#158L AS _extract_n#157L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#158L]
!      :- Project [id#2, nested#3.n AS _extract_n#158L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#158L AS n#26L]                                                           Project [id#2, _extract_n#158L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#158L]                                                   :- Project [id#2, nested#3.n AS _extract_n#158L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!            +- LocalTableScan <empty>, [id#18]                                                     
           
23/11/10 17:20:46 WARN BaseSessionStateBuilder$$anon$2: Max iterations (100) reached for batch Operator Optimization before Inferring Filters, please set 'spark.sql.optimizer.maxIterations' to a larger value.
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Result of Batch Operator Optimization before Inferring Filters ===
!Project [id#2, nested#3.n AS n#26L]                                                             Project [id#2, _extract_n#158L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                +- Join LeftAnti, (id#2 = id#18)
!   :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :- Project [id#2, nested#3.n AS _extract_n#158L]
!   :     +- LocalTableScan <empty>, [id#2, nested#3]                                               :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- LocalTableScan <empty>, [id#18]                                                        +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                         +- LocalTableScan <empty>, [id#18]
          
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.InferFiltersFromConstraints ===
 Project [id#2, _extract_n#158L AS n#26L]                                                           Project [id#2, _extract_n#158L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#158L]                                                   :- Project [id#2, nested#3.n AS _extract_n#158L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  +- Filter isnotnull(id#18)
!         +- LocalTableScan <empty>, [id#18]                                                              +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                               +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Result of Batch Infer Filters ===
 Project [id#2, _extract_n#158L AS n#26L]                                                           Project [id#2, _extract_n#158L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#158L]                                                   :- Project [id#2, nested#3.n AS _extract_n#158L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  +- Filter isnotnull(id#18)
!         +- LocalTableScan <empty>, [id#18]                                                              +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                               +- LocalTableScan <empty>, [id#18]
          
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#158L AS n#26L]                                                           Project [id#2, _extract_n#158L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#158L]
!   :- Project [id#2, nested#3.n AS _extract_n#158L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#158L AS n#26L]                                                           Project [id#2, _extract_n#158L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#158L]                                                   +- Project [id#2, _extract_n#159L AS _extract_n#158L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#159L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#158L AS n#26L]                                                              Project [id#2, _extract_n#159L AS n#26L]
!+- Project [id#2, _extract_n#159L AS _extract_n#158L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#159L]
!      :- Project [id#2, nested#3.n AS _extract_n#159L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#159L AS n#26L]                                                           Project [id#2, _extract_n#159L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#159L]                                                   :- Project [id#2, nested#3.n AS _extract_n#159L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#159L AS n#26L]                                                           Project [id#2, _extract_n#159L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#159L]
!   :- Project [id#2, nested#3.n AS _extract_n#159L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#159L AS n#26L]                                                           Project [id#2, _extract_n#159L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#159L]                                                   +- Project [id#2, _extract_n#160L AS _extract_n#159L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#160L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#159L AS n#26L]                                                              Project [id#2, _extract_n#160L AS n#26L]
!+- Project [id#2, _extract_n#160L AS _extract_n#159L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#160L]
!      :- Project [id#2, nested#3.n AS _extract_n#160L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#160L AS n#26L]                                                           Project [id#2, _extract_n#160L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#160L]                                                   :- Project [id#2, nested#3.n AS _extract_n#160L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#160L AS n#26L]                                                           Project [id#2, _extract_n#160L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#160L]
!   :- Project [id#2, nested#3.n AS _extract_n#160L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#160L AS n#26L]                                                           Project [id#2, _extract_n#160L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#160L]                                                   +- Project [id#2, _extract_n#161L AS _extract_n#160L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#161L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#160L AS n#26L]                                                              Project [id#2, _extract_n#161L AS n#26L]
!+- Project [id#2, _extract_n#161L AS _extract_n#160L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#161L]
!      :- Project [id#2, nested#3.n AS _extract_n#161L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#161L AS n#26L]                                                           Project [id#2, _extract_n#161L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#161L]                                                   :- Project [id#2, nested#3.n AS _extract_n#161L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#161L AS n#26L]                                                           Project [id#2, _extract_n#161L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#161L]
!   :- Project [id#2, nested#3.n AS _extract_n#161L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#161L AS n#26L]                                                           Project [id#2, _extract_n#161L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#161L]                                                   +- Project [id#2, _extract_n#162L AS _extract_n#161L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#162L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#161L AS n#26L]                                                              Project [id#2, _extract_n#162L AS n#26L]
!+- Project [id#2, _extract_n#162L AS _extract_n#161L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#162L]
!      :- Project [id#2, nested#3.n AS _extract_n#162L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#162L AS n#26L]                                                           Project [id#2, _extract_n#162L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#162L]                                                   :- Project [id#2, nested#3.n AS _extract_n#162L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#162L AS n#26L]                                                           Project [id#2, _extract_n#162L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#162L]
!   :- Project [id#2, nested#3.n AS _extract_n#162L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#162L AS n#26L]                                                           Project [id#2, _extract_n#162L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#162L]                                                   +- Project [id#2, _extract_n#163L AS _extract_n#162L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#163L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#162L AS n#26L]                                                              Project [id#2, _extract_n#163L AS n#26L]
!+- Project [id#2, _extract_n#163L AS _extract_n#162L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#163L]
!      :- Project [id#2, nested#3.n AS _extract_n#163L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#163L AS n#26L]                                                           Project [id#2, _extract_n#163L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#163L]                                                   :- Project [id#2, nested#3.n AS _extract_n#163L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#163L AS n#26L]                                                           Project [id#2, _extract_n#163L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#163L]
!   :- Project [id#2, nested#3.n AS _extract_n#163L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#163L AS n#26L]                                                           Project [id#2, _extract_n#163L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#163L]                                                   +- Project [id#2, _extract_n#164L AS _extract_n#163L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#164L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#163L AS n#26L]                                                              Project [id#2, _extract_n#164L AS n#26L]
!+- Project [id#2, _extract_n#164L AS _extract_n#163L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#164L]
!      :- Project [id#2, nested#3.n AS _extract_n#164L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#164L AS n#26L]                                                           Project [id#2, _extract_n#164L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#164L]                                                   :- Project [id#2, nested#3.n AS _extract_n#164L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#164L AS n#26L]                                                           Project [id#2, _extract_n#164L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#164L]
!   :- Project [id#2, nested#3.n AS _extract_n#164L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup: closed
23/11/10 17:20:46 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup: stopped, remaining connections 0
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#164L AS n#26L]                                                           Project [id#2, _extract_n#164L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#164L]                                                   +- Project [id#2, _extract_n#165L AS _extract_n#164L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#165L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#164L AS n#26L]                                                              Project [id#2, _extract_n#165L AS n#26L]
!+- Project [id#2, _extract_n#165L AS _extract_n#164L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#165L]
!      :- Project [id#2, nested#3.n AS _extract_n#165L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#165L AS n#26L]                                                           Project [id#2, _extract_n#165L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#165L]                                                   :- Project [id#2, nested#3.n AS _extract_n#165L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#165L AS n#26L]                                                           Project [id#2, _extract_n#165L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#165L]
!   :- Project [id#2, nested#3.n AS _extract_n#165L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#165L AS n#26L]                                                           Project [id#2, _extract_n#165L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#165L]                                                   +- Project [id#2, _extract_n#166L AS _extract_n#165L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#166L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#165L AS n#26L]                                                              Project [id#2, _extract_n#166L AS n#26L]
!+- Project [id#2, _extract_n#166L AS _extract_n#165L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#166L]
!      :- Project [id#2, nested#3.n AS _extract_n#166L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#166L AS n#26L]                                                           Project [id#2, _extract_n#166L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#166L]                                                   :- Project [id#2, nested#3.n AS _extract_n#166L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#166L AS n#26L]                                                           Project [id#2, _extract_n#166L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#166L]
!   :- Project [id#2, nested#3.n AS _extract_n#166L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#166L AS n#26L]                                                           Project [id#2, _extract_n#166L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#166L]                                                   +- Project [id#2, _extract_n#167L AS _extract_n#166L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#167L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#166L AS n#26L]                                                              Project [id#2, _extract_n#167L AS n#26L]
!+- Project [id#2, _extract_n#167L AS _extract_n#166L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#167L]
!      :- Project [id#2, nested#3.n AS _extract_n#167L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#167L AS n#26L]                                                           Project [id#2, _extract_n#167L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#167L]                                                   :- Project [id#2, nested#3.n AS _extract_n#167L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#167L AS n#26L]                                                           Project [id#2, _extract_n#167L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#167L]
!   :- Project [id#2, nested#3.n AS _extract_n#167L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#167L AS n#26L]                                                           Project [id#2, _extract_n#167L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#167L]                                                   +- Project [id#2, _extract_n#168L AS _extract_n#167L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#168L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#167L AS n#26L]                                                              Project [id#2, _extract_n#168L AS n#26L]
!+- Project [id#2, _extract_n#168L AS _extract_n#167L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#168L]
!      :- Project [id#2, nested#3.n AS _extract_n#168L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#168L AS n#26L]                                                           Project [id#2, _extract_n#168L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#168L]                                                   :- Project [id#2, nested#3.n AS _extract_n#168L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#168L AS n#26L]                                                           Project [id#2, _extract_n#168L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#168L]
!   :- Project [id#2, nested#3.n AS _extract_n#168L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#168L AS n#26L]                                                           Project [id#2, _extract_n#168L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#168L]                                                   +- Project [id#2, _extract_n#169L AS _extract_n#168L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#169L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#168L AS n#26L]                                                              Project [id#2, _extract_n#169L AS n#26L]
!+- Project [id#2, _extract_n#169L AS _extract_n#168L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#169L]
!      :- Project [id#2, nested#3.n AS _extract_n#169L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#169L AS n#26L]                                                           Project [id#2, _extract_n#169L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#169L]                                                   :- Project [id#2, nested#3.n AS _extract_n#169L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#169L AS n#26L]                                                           Project [id#2, _extract_n#169L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#169L]
!   :- Project [id#2, nested#3.n AS _extract_n#169L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#169L AS n#26L]                                                           Project [id#2, _extract_n#169L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#169L]                                                   +- Project [id#2, _extract_n#170L AS _extract_n#169L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#170L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#169L AS n#26L]                                                              Project [id#2, _extract_n#170L AS n#26L]
!+- Project [id#2, _extract_n#170L AS _extract_n#169L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#170L]
!      :- Project [id#2, nested#3.n AS _extract_n#170L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#170L AS n#26L]                                                           Project [id#2, _extract_n#170L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#170L]                                                   :- Project [id#2, nested#3.n AS _extract_n#170L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#170L AS n#26L]                                                           Project [id#2, _extract_n#170L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#170L]
!   :- Project [id#2, nested#3.n AS _extract_n#170L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#170L AS n#26L]                                                           Project [id#2, _extract_n#170L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#170L]                                                   +- Project [id#2, _extract_n#171L AS _extract_n#170L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#171L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#170L AS n#26L]                                                              Project [id#2, _extract_n#171L AS n#26L]
!+- Project [id#2, _extract_n#171L AS _extract_n#170L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#171L]
!      :- Project [id#2, nested#3.n AS _extract_n#171L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#171L AS n#26L]                                                           Project [id#2, _extract_n#171L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#171L]                                                   :- Project [id#2, nested#3.n AS _extract_n#171L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#171L AS n#26L]                                                           Project [id#2, _extract_n#171L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#171L]
!   :- Project [id#2, nested#3.n AS _extract_n#171L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#171L AS n#26L]                                                           Project [id#2, _extract_n#171L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#171L]                                                   +- Project [id#2, _extract_n#172L AS _extract_n#171L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#172L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#171L AS n#26L]                                                              Project [id#2, _extract_n#172L AS n#26L]
!+- Project [id#2, _extract_n#172L AS _extract_n#171L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#172L]
!      :- Project [id#2, nested#3.n AS _extract_n#172L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#172L AS n#26L]                                                           Project [id#2, _extract_n#172L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#172L]                                                   :- Project [id#2, nested#3.n AS _extract_n#172L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#172L AS n#26L]                                                           Project [id#2, _extract_n#172L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#172L]
!   :- Project [id#2, nested#3.n AS _extract_n#172L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#172L AS n#26L]                                                           Project [id#2, _extract_n#172L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#172L]                                                   +- Project [id#2, _extract_n#173L AS _extract_n#172L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#173L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#172L AS n#26L]                                                              Project [id#2, _extract_n#173L AS n#26L]
!+- Project [id#2, _extract_n#173L AS _extract_n#172L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#173L]
!      :- Project [id#2, nested#3.n AS _extract_n#173L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#173L AS n#26L]                                                           Project [id#2, _extract_n#173L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#173L]                                                   :- Project [id#2, nested#3.n AS _extract_n#173L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#173L AS n#26L]                                                           Project [id#2, _extract_n#173L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#173L]
!   :- Project [id#2, nested#3.n AS _extract_n#173L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#173L AS n#26L]                                                           Project [id#2, _extract_n#173L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#173L]                                                   +- Project [id#2, _extract_n#174L AS _extract_n#173L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#174L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#173L AS n#26L]                                                              Project [id#2, _extract_n#174L AS n#26L]
!+- Project [id#2, _extract_n#174L AS _extract_n#173L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#174L]
!      :- Project [id#2, nested#3.n AS _extract_n#174L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#174L AS n#26L]                                                           Project [id#2, _extract_n#174L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#174L]                                                   :- Project [id#2, nested#3.n AS _extract_n#174L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#174L AS n#26L]                                                           Project [id#2, _extract_n#174L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#174L]
!   :- Project [id#2, nested#3.n AS _extract_n#174L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#174L AS n#26L]                                                           Project [id#2, _extract_n#174L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#174L]                                                   +- Project [id#2, _extract_n#175L AS _extract_n#174L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#175L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:46 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#174L AS n#26L]                                                              Project [id#2, _extract_n#175L AS n#26L]
!+- Project [id#2, _extract_n#175L AS _extract_n#174L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#175L]
!      :- Project [id#2, nested#3.n AS _extract_n#175L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#175L AS n#26L]                                                           Project [id#2, _extract_n#175L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#175L]                                                   :- Project [id#2, nested#3.n AS _extract_n#175L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#175L AS n#26L]                                                           Project [id#2, _extract_n#175L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#175L]
!   :- Project [id#2, nested#3.n AS _extract_n#175L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#175L AS n#26L]                                                           Project [id#2, _extract_n#175L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#175L]                                                   +- Project [id#2, _extract_n#176L AS _extract_n#175L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#176L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#175L AS n#26L]                                                              Project [id#2, _extract_n#176L AS n#26L]
!+- Project [id#2, _extract_n#176L AS _extract_n#175L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#176L]
!      :- Project [id#2, nested#3.n AS _extract_n#176L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#176L AS n#26L]                                                           Project [id#2, _extract_n#176L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#176L]                                                   :- Project [id#2, nested#3.n AS _extract_n#176L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#176L AS n#26L]                                                           Project [id#2, _extract_n#176L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#176L]
!   :- Project [id#2, nested#3.n AS _extract_n#176L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#176L AS n#26L]                                                           Project [id#2, _extract_n#176L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#176L]                                                   +- Project [id#2, _extract_n#177L AS _extract_n#176L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#177L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#176L AS n#26L]                                                              Project [id#2, _extract_n#177L AS n#26L]
!+- Project [id#2, _extract_n#177L AS _extract_n#176L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#177L]
!      :- Project [id#2, nested#3.n AS _extract_n#177L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#177L AS n#26L]                                                           Project [id#2, _extract_n#177L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#177L]                                                   :- Project [id#2, nested#3.n AS _extract_n#177L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#177L AS n#26L]                                                           Project [id#2, _extract_n#177L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#177L]
!   :- Project [id#2, nested#3.n AS _extract_n#177L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#177L AS n#26L]                                                           Project [id#2, _extract_n#177L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#177L]                                                   +- Project [id#2, _extract_n#178L AS _extract_n#177L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#178L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#177L AS n#26L]                                                              Project [id#2, _extract_n#178L AS n#26L]
!+- Project [id#2, _extract_n#178L AS _extract_n#177L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#178L]
!      :- Project [id#2, nested#3.n AS _extract_n#178L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#178L AS n#26L]                                                           Project [id#2, _extract_n#178L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#178L]                                                   :- Project [id#2, nested#3.n AS _extract_n#178L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#178L AS n#26L]                                                           Project [id#2, _extract_n#178L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#178L]
!   :- Project [id#2, nested#3.n AS _extract_n#178L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#178L AS n#26L]                                                           Project [id#2, _extract_n#178L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#178L]                                                   +- Project [id#2, _extract_n#179L AS _extract_n#178L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#179L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#178L AS n#26L]                                                              Project [id#2, _extract_n#179L AS n#26L]
!+- Project [id#2, _extract_n#179L AS _extract_n#178L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#179L]
!      :- Project [id#2, nested#3.n AS _extract_n#179L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#179L AS n#26L]                                                           Project [id#2, _extract_n#179L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#179L]                                                   :- Project [id#2, nested#3.n AS _extract_n#179L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#179L AS n#26L]                                                           Project [id#2, _extract_n#179L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#179L]
!   :- Project [id#2, nested#3.n AS _extract_n#179L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#179L AS n#26L]                                                           Project [id#2, _extract_n#179L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#179L]                                                   +- Project [id#2, _extract_n#180L AS _extract_n#179L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#180L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#179L AS n#26L]                                                              Project [id#2, _extract_n#180L AS n#26L]
!+- Project [id#2, _extract_n#180L AS _extract_n#179L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#180L]
!      :- Project [id#2, nested#3.n AS _extract_n#180L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#180L AS n#26L]                                                           Project [id#2, _extract_n#180L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#180L]                                                   :- Project [id#2, nested#3.n AS _extract_n#180L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#180L AS n#26L]                                                           Project [id#2, _extract_n#180L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#180L]
!   :- Project [id#2, nested#3.n AS _extract_n#180L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#180L AS n#26L]                                                           Project [id#2, _extract_n#180L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#180L]                                                   +- Project [id#2, _extract_n#181L AS _extract_n#180L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#181L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#180L AS n#26L]                                                              Project [id#2, _extract_n#181L AS n#26L]
!+- Project [id#2, _extract_n#181L AS _extract_n#180L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#181L]
!      :- Project [id#2, nested#3.n AS _extract_n#181L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#181L AS n#26L]                                                           Project [id#2, _extract_n#181L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#181L]                                                   :- Project [id#2, nested#3.n AS _extract_n#181L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#181L AS n#26L]                                                           Project [id#2, _extract_n#181L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#181L]
!   :- Project [id#2, nested#3.n AS _extract_n#181L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#181L AS n#26L]                                                           Project [id#2, _extract_n#181L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#181L]                                                   +- Project [id#2, _extract_n#182L AS _extract_n#181L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#182L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#181L AS n#26L]                                                              Project [id#2, _extract_n#182L AS n#26L]
!+- Project [id#2, _extract_n#182L AS _extract_n#181L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#182L]
!      :- Project [id#2, nested#3.n AS _extract_n#182L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#182L AS n#26L]                                                           Project [id#2, _extract_n#182L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#182L]                                                   :- Project [id#2, nested#3.n AS _extract_n#182L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#182L AS n#26L]                                                           Project [id#2, _extract_n#182L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#182L]
!   :- Project [id#2, nested#3.n AS _extract_n#182L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#182L AS n#26L]                                                           Project [id#2, _extract_n#182L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#182L]                                                   +- Project [id#2, _extract_n#183L AS _extract_n#182L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#183L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#182L AS n#26L]                                                              Project [id#2, _extract_n#183L AS n#26L]
!+- Project [id#2, _extract_n#183L AS _extract_n#182L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#183L]
!      :- Project [id#2, nested#3.n AS _extract_n#183L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#183L AS n#26L]                                                           Project [id#2, _extract_n#183L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#183L]                                                   :- Project [id#2, nested#3.n AS _extract_n#183L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#183L AS n#26L]                                                           Project [id#2, _extract_n#183L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#183L]
!   :- Project [id#2, nested#3.n AS _extract_n#183L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#183L AS n#26L]                                                           Project [id#2, _extract_n#183L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#183L]                                                   +- Project [id#2, _extract_n#184L AS _extract_n#183L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#184L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#183L AS n#26L]                                                              Project [id#2, _extract_n#184L AS n#26L]
!+- Project [id#2, _extract_n#184L AS _extract_n#183L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#184L]
!      :- Project [id#2, nested#3.n AS _extract_n#184L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#184L AS n#26L]                                                           Project [id#2, _extract_n#184L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#184L]                                                   :- Project [id#2, nested#3.n AS _extract_n#184L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#184L AS n#26L]                                                           Project [id#2, _extract_n#184L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#184L]
!   :- Project [id#2, nested#3.n AS _extract_n#184L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#184L AS n#26L]                                                           Project [id#2, _extract_n#184L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#184L]                                                   +- Project [id#2, _extract_n#185L AS _extract_n#184L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#185L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#184L AS n#26L]                                                              Project [id#2, _extract_n#185L AS n#26L]
!+- Project [id#2, _extract_n#185L AS _extract_n#184L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#185L]
!      :- Project [id#2, nested#3.n AS _extract_n#185L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#185L AS n#26L]                                                           Project [id#2, _extract_n#185L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#185L]                                                   :- Project [id#2, nested#3.n AS _extract_n#185L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#185L AS n#26L]                                                           Project [id#2, _extract_n#185L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#185L]
!   :- Project [id#2, nested#3.n AS _extract_n#185L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#185L AS n#26L]                                                           Project [id#2, _extract_n#185L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#185L]                                                   +- Project [id#2, _extract_n#186L AS _extract_n#185L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#186L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#185L AS n#26L]                                                              Project [id#2, _extract_n#186L AS n#26L]
!+- Project [id#2, _extract_n#186L AS _extract_n#185L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#186L]
!      :- Project [id#2, nested#3.n AS _extract_n#186L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#186L AS n#26L]                                                           Project [id#2, _extract_n#186L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#186L]                                                   :- Project [id#2, nested#3.n AS _extract_n#186L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#186L AS n#26L]                                                           Project [id#2, _extract_n#186L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#186L]
!   :- Project [id#2, nested#3.n AS _extract_n#186L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#186L AS n#26L]                                                           Project [id#2, _extract_n#186L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#186L]                                                   +- Project [id#2, _extract_n#187L AS _extract_n#186L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#187L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#186L AS n#26L]                                                              Project [id#2, _extract_n#187L AS n#26L]
!+- Project [id#2, _extract_n#187L AS _extract_n#186L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#187L]
!      :- Project [id#2, nested#3.n AS _extract_n#187L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#187L AS n#26L]                                                           Project [id#2, _extract_n#187L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#187L]                                                   :- Project [id#2, nested#3.n AS _extract_n#187L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#187L AS n#26L]                                                           Project [id#2, _extract_n#187L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#187L]
!   :- Project [id#2, nested#3.n AS _extract_n#187L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#187L AS n#26L]                                                           Project [id#2, _extract_n#187L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#187L]                                                   +- Project [id#2, _extract_n#188L AS _extract_n#187L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#188L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#187L AS n#26L]                                                              Project [id#2, _extract_n#188L AS n#26L]
!+- Project [id#2, _extract_n#188L AS _extract_n#187L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#188L]
!      :- Project [id#2, nested#3.n AS _extract_n#188L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#188L AS n#26L]                                                           Project [id#2, _extract_n#188L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#188L]                                                   :- Project [id#2, nested#3.n AS _extract_n#188L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#188L AS n#26L]                                                           Project [id#2, _extract_n#188L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#188L]
!   :- Project [id#2, nested#3.n AS _extract_n#188L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#188L AS n#26L]                                                           Project [id#2, _extract_n#188L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#188L]                                                   +- Project [id#2, _extract_n#189L AS _extract_n#188L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#189L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#188L AS n#26L]                                                              Project [id#2, _extract_n#189L AS n#26L]
!+- Project [id#2, _extract_n#189L AS _extract_n#188L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#189L]
!      :- Project [id#2, nested#3.n AS _extract_n#189L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#189L AS n#26L]                                                           Project [id#2, _extract_n#189L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#189L]                                                   :- Project [id#2, nested#3.n AS _extract_n#189L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#189L AS n#26L]                                                           Project [id#2, _extract_n#189L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#189L]
!   :- Project [id#2, nested#3.n AS _extract_n#189L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#189L AS n#26L]                                                           Project [id#2, _extract_n#189L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#189L]                                                   +- Project [id#2, _extract_n#190L AS _extract_n#189L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#190L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#189L AS n#26L]                                                              Project [id#2, _extract_n#190L AS n#26L]
!+- Project [id#2, _extract_n#190L AS _extract_n#189L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#190L]
!      :- Project [id#2, nested#3.n AS _extract_n#190L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#190L AS n#26L]                                                           Project [id#2, _extract_n#190L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#190L]                                                   :- Project [id#2, nested#3.n AS _extract_n#190L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#190L AS n#26L]                                                           Project [id#2, _extract_n#190L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#190L]
!   :- Project [id#2, nested#3.n AS _extract_n#190L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#190L AS n#26L]                                                           Project [id#2, _extract_n#190L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#190L]                                                   +- Project [id#2, _extract_n#191L AS _extract_n#190L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#191L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#190L AS n#26L]                                                              Project [id#2, _extract_n#191L AS n#26L]
!+- Project [id#2, _extract_n#191L AS _extract_n#190L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#191L]
!      :- Project [id#2, nested#3.n AS _extract_n#191L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#191L AS n#26L]                                                           Project [id#2, _extract_n#191L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#191L]                                                   :- Project [id#2, nested#3.n AS _extract_n#191L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#191L AS n#26L]                                                           Project [id#2, _extract_n#191L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#191L]
!   :- Project [id#2, nested#3.n AS _extract_n#191L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#191L AS n#26L]                                                           Project [id#2, _extract_n#191L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#191L]                                                   +- Project [id#2, _extract_n#192L AS _extract_n#191L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#192L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#191L AS n#26L]                                                              Project [id#2, _extract_n#192L AS n#26L]
!+- Project [id#2, _extract_n#192L AS _extract_n#191L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#192L]
!      :- Project [id#2, nested#3.n AS _extract_n#192L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#192L AS n#26L]                                                           Project [id#2, _extract_n#192L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#192L]                                                   :- Project [id#2, nested#3.n AS _extract_n#192L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#192L AS n#26L]                                                           Project [id#2, _extract_n#192L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#192L]
!   :- Project [id#2, nested#3.n AS _extract_n#192L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#192L AS n#26L]                                                           Project [id#2, _extract_n#192L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#192L]                                                   +- Project [id#2, _extract_n#193L AS _extract_n#192L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#193L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#192L AS n#26L]                                                              Project [id#2, _extract_n#193L AS n#26L]
!+- Project [id#2, _extract_n#193L AS _extract_n#192L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#193L]
!      :- Project [id#2, nested#3.n AS _extract_n#193L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#193L AS n#26L]                                                           Project [id#2, _extract_n#193L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#193L]                                                   :- Project [id#2, nested#3.n AS _extract_n#193L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:47 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#193L AS n#26L]                                                           Project [id#2, _extract_n#193L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#193L]
!   :- Project [id#2, nested#3.n AS _extract_n#193L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#193L AS n#26L]                                                           Project [id#2, _extract_n#193L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#193L]                                                   +- Project [id#2, _extract_n#194L AS _extract_n#193L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#194L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#193L AS n#26L]                                                              Project [id#2, _extract_n#194L AS n#26L]
!+- Project [id#2, _extract_n#194L AS _extract_n#193L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#194L]
!      :- Project [id#2, nested#3.n AS _extract_n#194L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#194L AS n#26L]                                                           Project [id#2, _extract_n#194L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#194L]                                                   :- Project [id#2, nested#3.n AS _extract_n#194L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#194L AS n#26L]                                                           Project [id#2, _extract_n#194L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#194L]
!   :- Project [id#2, nested#3.n AS _extract_n#194L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#194L AS n#26L]                                                           Project [id#2, _extract_n#194L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#194L]                                                   +- Project [id#2, _extract_n#195L AS _extract_n#194L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#195L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#194L AS n#26L]                                                              Project [id#2, _extract_n#195L AS n#26L]
!+- Project [id#2, _extract_n#195L AS _extract_n#194L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#195L]
!      :- Project [id#2, nested#3.n AS _extract_n#195L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#195L AS n#26L]                                                           Project [id#2, _extract_n#195L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#195L]                                                   :- Project [id#2, nested#3.n AS _extract_n#195L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#195L AS n#26L]                                                           Project [id#2, _extract_n#195L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#195L]
!   :- Project [id#2, nested#3.n AS _extract_n#195L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#195L AS n#26L]                                                           Project [id#2, _extract_n#195L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#195L]                                                   +- Project [id#2, _extract_n#196L AS _extract_n#195L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#196L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#195L AS n#26L]                                                              Project [id#2, _extract_n#196L AS n#26L]
!+- Project [id#2, _extract_n#196L AS _extract_n#195L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#196L]
!      :- Project [id#2, nested#3.n AS _extract_n#196L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#196L AS n#26L]                                                           Project [id#2, _extract_n#196L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#196L]                                                   :- Project [id#2, nested#3.n AS _extract_n#196L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#196L AS n#26L]                                                           Project [id#2, _extract_n#196L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#196L]
!   :- Project [id#2, nested#3.n AS _extract_n#196L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#196L AS n#26L]                                                           Project [id#2, _extract_n#196L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#196L]                                                   +- Project [id#2, _extract_n#197L AS _extract_n#196L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#197L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#196L AS n#26L]                                                              Project [id#2, _extract_n#197L AS n#26L]
!+- Project [id#2, _extract_n#197L AS _extract_n#196L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#197L]
!      :- Project [id#2, nested#3.n AS _extract_n#197L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#197L AS n#26L]                                                           Project [id#2, _extract_n#197L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#197L]                                                   :- Project [id#2, nested#3.n AS _extract_n#197L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#197L AS n#26L]                                                           Project [id#2, _extract_n#197L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#197L]
!   :- Project [id#2, nested#3.n AS _extract_n#197L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#197L AS n#26L]                                                           Project [id#2, _extract_n#197L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#197L]                                                   +- Project [id#2, _extract_n#198L AS _extract_n#197L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#198L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#197L AS n#26L]                                                              Project [id#2, _extract_n#198L AS n#26L]
!+- Project [id#2, _extract_n#198L AS _extract_n#197L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#198L]
!      :- Project [id#2, nested#3.n AS _extract_n#198L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#198L AS n#26L]                                                           Project [id#2, _extract_n#198L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#198L]                                                   :- Project [id#2, nested#3.n AS _extract_n#198L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#198L AS n#26L]                                                           Project [id#2, _extract_n#198L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#198L]
!   :- Project [id#2, nested#3.n AS _extract_n#198L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#198L AS n#26L]                                                           Project [id#2, _extract_n#198L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#198L]                                                   +- Project [id#2, _extract_n#199L AS _extract_n#198L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#199L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#198L AS n#26L]                                                              Project [id#2, _extract_n#199L AS n#26L]
!+- Project [id#2, _extract_n#199L AS _extract_n#198L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#199L]
!      :- Project [id#2, nested#3.n AS _extract_n#199L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#199L AS n#26L]                                                           Project [id#2, _extract_n#199L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#199L]                                                   :- Project [id#2, nested#3.n AS _extract_n#199L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#199L AS n#26L]                                                           Project [id#2, _extract_n#199L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#199L]
!   :- Project [id#2, nested#3.n AS _extract_n#199L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#199L AS n#26L]                                                           Project [id#2, _extract_n#199L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#199L]                                                   +- Project [id#2, _extract_n#200L AS _extract_n#199L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#200L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#199L AS n#26L]                                                              Project [id#2, _extract_n#200L AS n#26L]
!+- Project [id#2, _extract_n#200L AS _extract_n#199L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#200L]
!      :- Project [id#2, nested#3.n AS _extract_n#200L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#200L AS n#26L]                                                           Project [id#2, _extract_n#200L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#200L]                                                   :- Project [id#2, nested#3.n AS _extract_n#200L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#200L AS n#26L]                                                           Project [id#2, _extract_n#200L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#200L]
!   :- Project [id#2, nested#3.n AS _extract_n#200L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#200L AS n#26L]                                                           Project [id#2, _extract_n#200L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#200L]                                                   +- Project [id#2, _extract_n#201L AS _extract_n#200L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#201L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#200L AS n#26L]                                                              Project [id#2, _extract_n#201L AS n#26L]
!+- Project [id#2, _extract_n#201L AS _extract_n#200L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#201L]
!      :- Project [id#2, nested#3.n AS _extract_n#201L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#201L AS n#26L]                                                           Project [id#2, _extract_n#201L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#201L]                                                   :- Project [id#2, nested#3.n AS _extract_n#201L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#201L AS n#26L]                                                           Project [id#2, _extract_n#201L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#201L]
!   :- Project [id#2, nested#3.n AS _extract_n#201L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#201L AS n#26L]                                                           Project [id#2, _extract_n#201L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#201L]                                                   +- Project [id#2, _extract_n#202L AS _extract_n#201L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#202L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#201L AS n#26L]                                                              Project [id#2, _extract_n#202L AS n#26L]
!+- Project [id#2, _extract_n#202L AS _extract_n#201L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#202L]
!      :- Project [id#2, nested#3.n AS _extract_n#202L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#202L AS n#26L]                                                           Project [id#2, _extract_n#202L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#202L]                                                   :- Project [id#2, nested#3.n AS _extract_n#202L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#202L AS n#26L]                                                           Project [id#2, _extract_n#202L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#202L]
!   :- Project [id#2, nested#3.n AS _extract_n#202L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#202L AS n#26L]                                                           Project [id#2, _extract_n#202L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#202L]                                                   +- Project [id#2, _extract_n#203L AS _extract_n#202L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#203L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#202L AS n#26L]                                                              Project [id#2, _extract_n#203L AS n#26L]
!+- Project [id#2, _extract_n#203L AS _extract_n#202L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#203L]
!      :- Project [id#2, nested#3.n AS _extract_n#203L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#203L AS n#26L]                                                           Project [id#2, _extract_n#203L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#203L]                                                   :- Project [id#2, nested#3.n AS _extract_n#203L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#203L AS n#26L]                                                           Project [id#2, _extract_n#203L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#203L]
!   :- Project [id#2, nested#3.n AS _extract_n#203L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#203L AS n#26L]                                                           Project [id#2, _extract_n#203L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#203L]                                                   +- Project [id#2, _extract_n#204L AS _extract_n#203L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#204L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#203L AS n#26L]                                                              Project [id#2, _extract_n#204L AS n#26L]
!+- Project [id#2, _extract_n#204L AS _extract_n#203L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#204L]
!      :- Project [id#2, nested#3.n AS _extract_n#204L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#204L AS n#26L]                                                           Project [id#2, _extract_n#204L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#204L]                                                   :- Project [id#2, nested#3.n AS _extract_n#204L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#204L AS n#26L]                                                           Project [id#2, _extract_n#204L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#204L]
!   :- Project [id#2, nested#3.n AS _extract_n#204L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#204L AS n#26L]                                                           Project [id#2, _extract_n#204L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#204L]                                                   +- Project [id#2, _extract_n#205L AS _extract_n#204L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#205L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#204L AS n#26L]                                                              Project [id#2, _extract_n#205L AS n#26L]
!+- Project [id#2, _extract_n#205L AS _extract_n#204L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#205L]
!      :- Project [id#2, nested#3.n AS _extract_n#205L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#205L AS n#26L]                                                           Project [id#2, _extract_n#205L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#205L]                                                   :- Project [id#2, nested#3.n AS _extract_n#205L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#205L AS n#26L]                                                           Project [id#2, _extract_n#205L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#205L]
!   :- Project [id#2, nested#3.n AS _extract_n#205L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#205L AS n#26L]                                                           Project [id#2, _extract_n#205L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#205L]                                                   +- Project [id#2, _extract_n#206L AS _extract_n#205L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#206L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#205L AS n#26L]                                                              Project [id#2, _extract_n#206L AS n#26L]
!+- Project [id#2, _extract_n#206L AS _extract_n#205L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#206L]
!      :- Project [id#2, nested#3.n AS _extract_n#206L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#206L AS n#26L]                                                           Project [id#2, _extract_n#206L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#206L]                                                   :- Project [id#2, nested#3.n AS _extract_n#206L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#206L AS n#26L]                                                           Project [id#2, _extract_n#206L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#206L]
!   :- Project [id#2, nested#3.n AS _extract_n#206L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#206L AS n#26L]                                                           Project [id#2, _extract_n#206L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#206L]                                                   +- Project [id#2, _extract_n#207L AS _extract_n#206L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#207L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#206L AS n#26L]                                                              Project [id#2, _extract_n#207L AS n#26L]
!+- Project [id#2, _extract_n#207L AS _extract_n#206L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#207L]
!      :- Project [id#2, nested#3.n AS _extract_n#207L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#207L AS n#26L]                                                           Project [id#2, _extract_n#207L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#207L]                                                   :- Project [id#2, nested#3.n AS _extract_n#207L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#207L AS n#26L]                                                           Project [id#2, _extract_n#207L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#207L]
!   :- Project [id#2, nested#3.n AS _extract_n#207L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#207L AS n#26L]                                                           Project [id#2, _extract_n#207L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#207L]                                                   +- Project [id#2, _extract_n#208L AS _extract_n#207L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#208L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#207L AS n#26L]                                                              Project [id#2, _extract_n#208L AS n#26L]
!+- Project [id#2, _extract_n#208L AS _extract_n#207L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#208L]
!      :- Project [id#2, nested#3.n AS _extract_n#208L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#208L AS n#26L]                                                           Project [id#2, _extract_n#208L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#208L]                                                   :- Project [id#2, nested#3.n AS _extract_n#208L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#208L AS n#26L]                                                           Project [id#2, _extract_n#208L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#208L]
!   :- Project [id#2, nested#3.n AS _extract_n#208L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#208L AS n#26L]                                                           Project [id#2, _extract_n#208L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#208L]                                                   +- Project [id#2, _extract_n#209L AS _extract_n#208L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#209L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#208L AS n#26L]                                                              Project [id#2, _extract_n#209L AS n#26L]
!+- Project [id#2, _extract_n#209L AS _extract_n#208L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#209L]
!      :- Project [id#2, nested#3.n AS _extract_n#209L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#209L AS n#26L]                                                           Project [id#2, _extract_n#209L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#209L]                                                   :- Project [id#2, nested#3.n AS _extract_n#209L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#209L AS n#26L]                                                           Project [id#2, _extract_n#209L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#209L]
!   :- Project [id#2, nested#3.n AS _extract_n#209L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#209L AS n#26L]                                                           Project [id#2, _extract_n#209L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#209L]                                                   +- Project [id#2, _extract_n#210L AS _extract_n#209L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#210L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#209L AS n#26L]                                                              Project [id#2, _extract_n#210L AS n#26L]
!+- Project [id#2, _extract_n#210L AS _extract_n#209L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#210L]
!      :- Project [id#2, nested#3.n AS _extract_n#210L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#210L AS n#26L]                                                           Project [id#2, _extract_n#210L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#210L]                                                   :- Project [id#2, nested#3.n AS _extract_n#210L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#210L AS n#26L]                                                           Project [id#2, _extract_n#210L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#210L]
!   :- Project [id#2, nested#3.n AS _extract_n#210L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#210L AS n#26L]                                                           Project [id#2, _extract_n#210L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#210L]                                                   +- Project [id#2, _extract_n#211L AS _extract_n#210L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#211L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#210L AS n#26L]                                                              Project [id#2, _extract_n#211L AS n#26L]
!+- Project [id#2, _extract_n#211L AS _extract_n#210L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#211L]
!      :- Project [id#2, nested#3.n AS _extract_n#211L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#211L AS n#26L]                                                           Project [id#2, _extract_n#211L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#211L]                                                   :- Project [id#2, nested#3.n AS _extract_n#211L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#211L AS n#26L]                                                           Project [id#2, _extract_n#211L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#211L]
!   :- Project [id#2, nested#3.n AS _extract_n#211L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#211L AS n#26L]                                                           Project [id#2, _extract_n#211L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#211L]                                                   +- Project [id#2, _extract_n#212L AS _extract_n#211L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#212L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:48 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#211L AS n#26L]                                                              Project [id#2, _extract_n#212L AS n#26L]
!+- Project [id#2, _extract_n#212L AS _extract_n#211L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#212L]
!      :- Project [id#2, nested#3.n AS _extract_n#212L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#212L AS n#26L]                                                           Project [id#2, _extract_n#212L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#212L]                                                   :- Project [id#2, nested#3.n AS _extract_n#212L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#212L AS n#26L]                                                           Project [id#2, _extract_n#212L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#212L]
!   :- Project [id#2, nested#3.n AS _extract_n#212L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#212L AS n#26L]                                                           Project [id#2, _extract_n#212L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#212L]                                                   +- Project [id#2, _extract_n#213L AS _extract_n#212L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#213L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#212L AS n#26L]                                                              Project [id#2, _extract_n#213L AS n#26L]
!+- Project [id#2, _extract_n#213L AS _extract_n#212L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#213L]
!      :- Project [id#2, nested#3.n AS _extract_n#213L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#213L AS n#26L]                                                           Project [id#2, _extract_n#213L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#213L]                                                   :- Project [id#2, nested#3.n AS _extract_n#213L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#213L AS n#26L]                                                           Project [id#2, _extract_n#213L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#213L]
!   :- Project [id#2, nested#3.n AS _extract_n#213L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#213L AS n#26L]                                                           Project [id#2, _extract_n#213L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#213L]                                                   +- Project [id#2, _extract_n#214L AS _extract_n#213L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#214L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#213L AS n#26L]                                                              Project [id#2, _extract_n#214L AS n#26L]
!+- Project [id#2, _extract_n#214L AS _extract_n#213L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#214L]
!      :- Project [id#2, nested#3.n AS _extract_n#214L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#214L AS n#26L]                                                           Project [id#2, _extract_n#214L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#214L]                                                   :- Project [id#2, nested#3.n AS _extract_n#214L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#214L AS n#26L]                                                           Project [id#2, _extract_n#214L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#214L]
!   :- Project [id#2, nested#3.n AS _extract_n#214L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#214L AS n#26L]                                                           Project [id#2, _extract_n#214L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#214L]                                                   +- Project [id#2, _extract_n#215L AS _extract_n#214L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#215L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#214L AS n#26L]                                                              Project [id#2, _extract_n#215L AS n#26L]
!+- Project [id#2, _extract_n#215L AS _extract_n#214L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#215L]
!      :- Project [id#2, nested#3.n AS _extract_n#215L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#215L AS n#26L]                                                           Project [id#2, _extract_n#215L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#215L]                                                   :- Project [id#2, nested#3.n AS _extract_n#215L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#215L AS n#26L]                                                           Project [id#2, _extract_n#215L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#215L]
!   :- Project [id#2, nested#3.n AS _extract_n#215L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#215L AS n#26L]                                                           Project [id#2, _extract_n#215L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#215L]                                                   +- Project [id#2, _extract_n#216L AS _extract_n#215L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#216L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#215L AS n#26L]                                                              Project [id#2, _extract_n#216L AS n#26L]
!+- Project [id#2, _extract_n#216L AS _extract_n#215L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#216L]
!      :- Project [id#2, nested#3.n AS _extract_n#216L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#216L AS n#26L]                                                           Project [id#2, _extract_n#216L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#216L]                                                   :- Project [id#2, nested#3.n AS _extract_n#216L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#216L AS n#26L]                                                           Project [id#2, _extract_n#216L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#216L]
!   :- Project [id#2, nested#3.n AS _extract_n#216L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#216L AS n#26L]                                                           Project [id#2, _extract_n#216L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#216L]                                                   +- Project [id#2, _extract_n#217L AS _extract_n#216L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#217L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#216L AS n#26L]                                                              Project [id#2, _extract_n#217L AS n#26L]
!+- Project [id#2, _extract_n#217L AS _extract_n#216L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#217L]
!      :- Project [id#2, nested#3.n AS _extract_n#217L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#217L AS n#26L]                                                           Project [id#2, _extract_n#217L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#217L]                                                   :- Project [id#2, nested#3.n AS _extract_n#217L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#217L AS n#26L]                                                           Project [id#2, _extract_n#217L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#217L]
!   :- Project [id#2, nested#3.n AS _extract_n#217L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#217L AS n#26L]                                                           Project [id#2, _extract_n#217L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#217L]                                                   +- Project [id#2, _extract_n#218L AS _extract_n#217L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#218L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#217L AS n#26L]                                                              Project [id#2, _extract_n#218L AS n#26L]
!+- Project [id#2, _extract_n#218L AS _extract_n#217L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#218L]
!      :- Project [id#2, nested#3.n AS _extract_n#218L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#218L AS n#26L]                                                           Project [id#2, _extract_n#218L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#218L]                                                   :- Project [id#2, nested#3.n AS _extract_n#218L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#218L AS n#26L]                                                           Project [id#2, _extract_n#218L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#218L]
!   :- Project [id#2, nested#3.n AS _extract_n#218L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#218L AS n#26L]                                                           Project [id#2, _extract_n#218L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#218L]                                                   +- Project [id#2, _extract_n#219L AS _extract_n#218L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#219L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#218L AS n#26L]                                                              Project [id#2, _extract_n#219L AS n#26L]
!+- Project [id#2, _extract_n#219L AS _extract_n#218L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#219L]
!      :- Project [id#2, nested#3.n AS _extract_n#219L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#219L AS n#26L]                                                           Project [id#2, _extract_n#219L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#219L]                                                   :- Project [id#2, nested#3.n AS _extract_n#219L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#219L AS n#26L]                                                           Project [id#2, _extract_n#219L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#219L]
!   :- Project [id#2, nested#3.n AS _extract_n#219L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#219L AS n#26L]                                                           Project [id#2, _extract_n#219L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#219L]                                                   +- Project [id#2, _extract_n#220L AS _extract_n#219L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#220L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#219L AS n#26L]                                                              Project [id#2, _extract_n#220L AS n#26L]
!+- Project [id#2, _extract_n#220L AS _extract_n#219L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#220L]
!      :- Project [id#2, nested#3.n AS _extract_n#220L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#220L AS n#26L]                                                           Project [id#2, _extract_n#220L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#220L]                                                   :- Project [id#2, nested#3.n AS _extract_n#220L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#220L AS n#26L]                                                           Project [id#2, _extract_n#220L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#220L]
!   :- Project [id#2, nested#3.n AS _extract_n#220L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#220L AS n#26L]                                                           Project [id#2, _extract_n#220L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#220L]                                                   +- Project [id#2, _extract_n#221L AS _extract_n#220L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#221L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#220L AS n#26L]                                                              Project [id#2, _extract_n#221L AS n#26L]
!+- Project [id#2, _extract_n#221L AS _extract_n#220L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#221L]
!      :- Project [id#2, nested#3.n AS _extract_n#221L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#221L AS n#26L]                                                           Project [id#2, _extract_n#221L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#221L]                                                   :- Project [id#2, nested#3.n AS _extract_n#221L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#221L AS n#26L]                                                           Project [id#2, _extract_n#221L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#221L]
!   :- Project [id#2, nested#3.n AS _extract_n#221L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#221L AS n#26L]                                                           Project [id#2, _extract_n#221L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#221L]                                                   +- Project [id#2, _extract_n#222L AS _extract_n#221L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#222L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#221L AS n#26L]                                                              Project [id#2, _extract_n#222L AS n#26L]
!+- Project [id#2, _extract_n#222L AS _extract_n#221L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#222L]
!      :- Project [id#2, nested#3.n AS _extract_n#222L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#222L AS n#26L]                                                           Project [id#2, _extract_n#222L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#222L]                                                   :- Project [id#2, nested#3.n AS _extract_n#222L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#222L AS n#26L]                                                           Project [id#2, _extract_n#222L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#222L]
!   :- Project [id#2, nested#3.n AS _extract_n#222L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#222L AS n#26L]                                                           Project [id#2, _extract_n#222L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#222L]                                                   +- Project [id#2, _extract_n#223L AS _extract_n#222L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#223L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#222L AS n#26L]                                                              Project [id#2, _extract_n#223L AS n#26L]
!+- Project [id#2, _extract_n#223L AS _extract_n#222L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#223L]
!      :- Project [id#2, nested#3.n AS _extract_n#223L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#223L AS n#26L]                                                           Project [id#2, _extract_n#223L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#223L]                                                   :- Project [id#2, nested#3.n AS _extract_n#223L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#223L AS n#26L]                                                           Project [id#2, _extract_n#223L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#223L]
!   :- Project [id#2, nested#3.n AS _extract_n#223L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#223L AS n#26L]                                                           Project [id#2, _extract_n#223L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#223L]                                                   +- Project [id#2, _extract_n#224L AS _extract_n#223L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#224L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#223L AS n#26L]                                                              Project [id#2, _extract_n#224L AS n#26L]
!+- Project [id#2, _extract_n#224L AS _extract_n#223L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#224L]
!      :- Project [id#2, nested#3.n AS _extract_n#224L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#224L AS n#26L]                                                           Project [id#2, _extract_n#224L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#224L]                                                   :- Project [id#2, nested#3.n AS _extract_n#224L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#224L AS n#26L]                                                           Project [id#2, _extract_n#224L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#224L]
!   :- Project [id#2, nested#3.n AS _extract_n#224L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#224L AS n#26L]                                                           Project [id#2, _extract_n#224L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#224L]                                                   +- Project [id#2, _extract_n#225L AS _extract_n#224L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#225L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#224L AS n#26L]                                                              Project [id#2, _extract_n#225L AS n#26L]
!+- Project [id#2, _extract_n#225L AS _extract_n#224L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#225L]
!      :- Project [id#2, nested#3.n AS _extract_n#225L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#225L AS n#26L]                                                           Project [id#2, _extract_n#225L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#225L]                                                   :- Project [id#2, nested#3.n AS _extract_n#225L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#225L AS n#26L]                                                           Project [id#2, _extract_n#225L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#225L]
!   :- Project [id#2, nested#3.n AS _extract_n#225L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#225L AS n#26L]                                                           Project [id#2, _extract_n#225L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#225L]                                                   +- Project [id#2, _extract_n#226L AS _extract_n#225L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#226L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#225L AS n#26L]                                                              Project [id#2, _extract_n#226L AS n#26L]
!+- Project [id#2, _extract_n#226L AS _extract_n#225L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#226L]
!      :- Project [id#2, nested#3.n AS _extract_n#226L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#226L AS n#26L]                                                           Project [id#2, _extract_n#226L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#226L]                                                   :- Project [id#2, nested#3.n AS _extract_n#226L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#226L AS n#26L]                                                           Project [id#2, _extract_n#226L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#226L]
!   :- Project [id#2, nested#3.n AS _extract_n#226L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#226L AS n#26L]                                                           Project [id#2, _extract_n#226L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#226L]                                                   +- Project [id#2, _extract_n#227L AS _extract_n#226L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#227L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#226L AS n#26L]                                                              Project [id#2, _extract_n#227L AS n#26L]
!+- Project [id#2, _extract_n#227L AS _extract_n#226L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#227L]
!      :- Project [id#2, nested#3.n AS _extract_n#227L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#227L AS n#26L]                                                           Project [id#2, _extract_n#227L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#227L]                                                   :- Project [id#2, nested#3.n AS _extract_n#227L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#227L AS n#26L]                                                           Project [id#2, _extract_n#227L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#227L]
!   :- Project [id#2, nested#3.n AS _extract_n#227L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#227L AS n#26L]                                                           Project [id#2, _extract_n#227L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#227L]                                                   +- Project [id#2, _extract_n#228L AS _extract_n#227L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#228L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#227L AS n#26L]                                                              Project [id#2, _extract_n#228L AS n#26L]
!+- Project [id#2, _extract_n#228L AS _extract_n#227L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#228L]
!      :- Project [id#2, nested#3.n AS _extract_n#228L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#228L AS n#26L]                                                           Project [id#2, _extract_n#228L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#228L]                                                   :- Project [id#2, nested#3.n AS _extract_n#228L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#228L AS n#26L]                                                           Project [id#2, _extract_n#228L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#228L]
!   :- Project [id#2, nested#3.n AS _extract_n#228L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#228L AS n#26L]                                                           Project [id#2, _extract_n#228L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#228L]                                                   +- Project [id#2, _extract_n#229L AS _extract_n#228L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#229L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#228L AS n#26L]                                                              Project [id#2, _extract_n#229L AS n#26L]
!+- Project [id#2, _extract_n#229L AS _extract_n#228L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#229L]
!      :- Project [id#2, nested#3.n AS _extract_n#229L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#229L AS n#26L]                                                           Project [id#2, _extract_n#229L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#229L]                                                   :- Project [id#2, nested#3.n AS _extract_n#229L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#229L AS n#26L]                                                           Project [id#2, _extract_n#229L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#229L]
!   :- Project [id#2, nested#3.n AS _extract_n#229L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#229L AS n#26L]                                                           Project [id#2, _extract_n#229L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#229L]                                                   +- Project [id#2, _extract_n#230L AS _extract_n#229L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#230L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#229L AS n#26L]                                                              Project [id#2, _extract_n#230L AS n#26L]
!+- Project [id#2, _extract_n#230L AS _extract_n#229L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#230L]
!      :- Project [id#2, nested#3.n AS _extract_n#230L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:49 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#230L AS n#26L]                                                           Project [id#2, _extract_n#230L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#230L]                                                   :- Project [id#2, nested#3.n AS _extract_n#230L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#230L AS n#26L]                                                           Project [id#2, _extract_n#230L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#230L]
!   :- Project [id#2, nested#3.n AS _extract_n#230L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#230L AS n#26L]                                                           Project [id#2, _extract_n#230L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#230L]                                                   +- Project [id#2, _extract_n#231L AS _extract_n#230L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#231L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#230L AS n#26L]                                                              Project [id#2, _extract_n#231L AS n#26L]
!+- Project [id#2, _extract_n#231L AS _extract_n#230L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#231L]
!      :- Project [id#2, nested#3.n AS _extract_n#231L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#231L AS n#26L]                                                           Project [id#2, _extract_n#231L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#231L]                                                   :- Project [id#2, nested#3.n AS _extract_n#231L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#231L AS n#26L]                                                           Project [id#2, _extract_n#231L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#231L]
!   :- Project [id#2, nested#3.n AS _extract_n#231L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#231L AS n#26L]                                                           Project [id#2, _extract_n#231L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#231L]                                                   +- Project [id#2, _extract_n#232L AS _extract_n#231L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#232L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#231L AS n#26L]                                                              Project [id#2, _extract_n#232L AS n#26L]
!+- Project [id#2, _extract_n#232L AS _extract_n#231L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#232L]
!      :- Project [id#2, nested#3.n AS _extract_n#232L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#232L AS n#26L]                                                           Project [id#2, _extract_n#232L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#232L]                                                   :- Project [id#2, nested#3.n AS _extract_n#232L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#232L AS n#26L]                                                           Project [id#2, _extract_n#232L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#232L]
!   :- Project [id#2, nested#3.n AS _extract_n#232L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#232L AS n#26L]                                                           Project [id#2, _extract_n#232L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#232L]                                                   +- Project [id#2, _extract_n#233L AS _extract_n#232L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#233L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#232L AS n#26L]                                                              Project [id#2, _extract_n#233L AS n#26L]
!+- Project [id#2, _extract_n#233L AS _extract_n#232L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#233L]
!      :- Project [id#2, nested#3.n AS _extract_n#233L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#233L AS n#26L]                                                           Project [id#2, _extract_n#233L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#233L]                                                   :- Project [id#2, nested#3.n AS _extract_n#233L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#233L AS n#26L]                                                           Project [id#2, _extract_n#233L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#233L]
!   :- Project [id#2, nested#3.n AS _extract_n#233L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#233L AS n#26L]                                                           Project [id#2, _extract_n#233L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#233L]                                                   +- Project [id#2, _extract_n#234L AS _extract_n#233L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#234L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#233L AS n#26L]                                                              Project [id#2, _extract_n#234L AS n#26L]
!+- Project [id#2, _extract_n#234L AS _extract_n#233L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#234L]
!      :- Project [id#2, nested#3.n AS _extract_n#234L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#234L AS n#26L]                                                           Project [id#2, _extract_n#234L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#234L]                                                   :- Project [id#2, nested#3.n AS _extract_n#234L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#234L AS n#26L]                                                           Project [id#2, _extract_n#234L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#234L]
!   :- Project [id#2, nested#3.n AS _extract_n#234L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#234L AS n#26L]                                                           Project [id#2, _extract_n#234L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#234L]                                                   +- Project [id#2, _extract_n#235L AS _extract_n#234L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#235L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#234L AS n#26L]                                                              Project [id#2, _extract_n#235L AS n#26L]
!+- Project [id#2, _extract_n#235L AS _extract_n#234L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#235L]
!      :- Project [id#2, nested#3.n AS _extract_n#235L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#235L AS n#26L]                                                           Project [id#2, _extract_n#235L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#235L]                                                   :- Project [id#2, nested#3.n AS _extract_n#235L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#235L AS n#26L]                                                           Project [id#2, _extract_n#235L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#235L]
!   :- Project [id#2, nested#3.n AS _extract_n#235L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#235L AS n#26L]                                                           Project [id#2, _extract_n#235L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#235L]                                                   +- Project [id#2, _extract_n#236L AS _extract_n#235L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#236L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#235L AS n#26L]                                                              Project [id#2, _extract_n#236L AS n#26L]
!+- Project [id#2, _extract_n#236L AS _extract_n#235L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#236L]
!      :- Project [id#2, nested#3.n AS _extract_n#236L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#236L AS n#26L]                                                           Project [id#2, _extract_n#236L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#236L]                                                   :- Project [id#2, nested#3.n AS _extract_n#236L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#236L AS n#26L]                                                           Project [id#2, _extract_n#236L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#236L]
!   :- Project [id#2, nested#3.n AS _extract_n#236L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#236L AS n#26L]                                                           Project [id#2, _extract_n#236L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#236L]                                                   +- Project [id#2, _extract_n#237L AS _extract_n#236L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#237L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#236L AS n#26L]                                                              Project [id#2, _extract_n#237L AS n#26L]
!+- Project [id#2, _extract_n#237L AS _extract_n#236L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#237L]
!      :- Project [id#2, nested#3.n AS _extract_n#237L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#237L AS n#26L]                                                           Project [id#2, _extract_n#237L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#237L]                                                   :- Project [id#2, nested#3.n AS _extract_n#237L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#237L AS n#26L]                                                           Project [id#2, _extract_n#237L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#237L]
!   :- Project [id#2, nested#3.n AS _extract_n#237L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#237L AS n#26L]                                                           Project [id#2, _extract_n#237L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#237L]                                                   +- Project [id#2, _extract_n#238L AS _extract_n#237L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#238L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#237L AS n#26L]                                                              Project [id#2, _extract_n#238L AS n#26L]
!+- Project [id#2, _extract_n#238L AS _extract_n#237L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#238L]
!      :- Project [id#2, nested#3.n AS _extract_n#238L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#238L AS n#26L]                                                           Project [id#2, _extract_n#238L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#238L]                                                   :- Project [id#2, nested#3.n AS _extract_n#238L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#238L AS n#26L]                                                           Project [id#2, _extract_n#238L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#238L]
!   :- Project [id#2, nested#3.n AS _extract_n#238L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#238L AS n#26L]                                                           Project [id#2, _extract_n#238L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#238L]                                                   +- Project [id#2, _extract_n#239L AS _extract_n#238L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#239L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#238L AS n#26L]                                                              Project [id#2, _extract_n#239L AS n#26L]
!+- Project [id#2, _extract_n#239L AS _extract_n#238L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#239L]
!      :- Project [id#2, nested#3.n AS _extract_n#239L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#239L AS n#26L]                                                           Project [id#2, _extract_n#239L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#239L]                                                   :- Project [id#2, nested#3.n AS _extract_n#239L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#239L AS n#26L]                                                           Project [id#2, _extract_n#239L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#239L]
!   :- Project [id#2, nested#3.n AS _extract_n#239L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#239L AS n#26L]                                                           Project [id#2, _extract_n#239L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#239L]                                                   +- Project [id#2, _extract_n#240L AS _extract_n#239L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#240L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#239L AS n#26L]                                                              Project [id#2, _extract_n#240L AS n#26L]
!+- Project [id#2, _extract_n#240L AS _extract_n#239L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#240L]
!      :- Project [id#2, nested#3.n AS _extract_n#240L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#240L AS n#26L]                                                           Project [id#2, _extract_n#240L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#240L]                                                   :- Project [id#2, nested#3.n AS _extract_n#240L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#240L AS n#26L]                                                           Project [id#2, _extract_n#240L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#240L]
!   :- Project [id#2, nested#3.n AS _extract_n#240L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#240L AS n#26L]                                                           Project [id#2, _extract_n#240L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#240L]                                                   +- Project [id#2, _extract_n#241L AS _extract_n#240L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#241L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#240L AS n#26L]                                                              Project [id#2, _extract_n#241L AS n#26L]
!+- Project [id#2, _extract_n#241L AS _extract_n#240L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#241L]
!      :- Project [id#2, nested#3.n AS _extract_n#241L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#241L AS n#26L]                                                           Project [id#2, _extract_n#241L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#241L]                                                   :- Project [id#2, nested#3.n AS _extract_n#241L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#241L AS n#26L]                                                           Project [id#2, _extract_n#241L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#241L]
!   :- Project [id#2, nested#3.n AS _extract_n#241L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#241L AS n#26L]                                                           Project [id#2, _extract_n#241L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#241L]                                                   +- Project [id#2, _extract_n#242L AS _extract_n#241L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#242L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#241L AS n#26L]                                                              Project [id#2, _extract_n#242L AS n#26L]
!+- Project [id#2, _extract_n#242L AS _extract_n#241L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#242L]
!      :- Project [id#2, nested#3.n AS _extract_n#242L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#242L AS n#26L]                                                           Project [id#2, _extract_n#242L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#242L]                                                   :- Project [id#2, nested#3.n AS _extract_n#242L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#242L AS n#26L]                                                           Project [id#2, _extract_n#242L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#242L]
!   :- Project [id#2, nested#3.n AS _extract_n#242L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#242L AS n#26L]                                                           Project [id#2, _extract_n#242L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#242L]                                                   +- Project [id#2, _extract_n#243L AS _extract_n#242L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#243L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#242L AS n#26L]                                                              Project [id#2, _extract_n#243L AS n#26L]
!+- Project [id#2, _extract_n#243L AS _extract_n#242L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#243L]
!      :- Project [id#2, nested#3.n AS _extract_n#243L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#243L AS n#26L]                                                           Project [id#2, _extract_n#243L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#243L]                                                   :- Project [id#2, nested#3.n AS _extract_n#243L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#243L AS n#26L]                                                           Project [id#2, _extract_n#243L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#243L]
!   :- Project [id#2, nested#3.n AS _extract_n#243L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#243L AS n#26L]                                                           Project [id#2, _extract_n#243L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#243L]                                                   +- Project [id#2, _extract_n#244L AS _extract_n#243L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#244L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#243L AS n#26L]                                                              Project [id#2, _extract_n#244L AS n#26L]
!+- Project [id#2, _extract_n#244L AS _extract_n#243L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#244L]
!      :- Project [id#2, nested#3.n AS _extract_n#244L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#244L AS n#26L]                                                           Project [id#2, _extract_n#244L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#244L]                                                   :- Project [id#2, nested#3.n AS _extract_n#244L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#244L AS n#26L]                                                           Project [id#2, _extract_n#244L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#244L]
!   :- Project [id#2, nested#3.n AS _extract_n#244L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#244L AS n#26L]                                                           Project [id#2, _extract_n#244L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#244L]                                                   +- Project [id#2, _extract_n#245L AS _extract_n#244L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#245L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#244L AS n#26L]                                                              Project [id#2, _extract_n#245L AS n#26L]
!+- Project [id#2, _extract_n#245L AS _extract_n#244L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#245L]
!      :- Project [id#2, nested#3.n AS _extract_n#245L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#245L AS n#26L]                                                           Project [id#2, _extract_n#245L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#245L]                                                   :- Project [id#2, nested#3.n AS _extract_n#245L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#245L AS n#26L]                                                           Project [id#2, _extract_n#245L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#245L]
!   :- Project [id#2, nested#3.n AS _extract_n#245L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#245L AS n#26L]                                                           Project [id#2, _extract_n#245L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#245L]                                                   +- Project [id#2, _extract_n#246L AS _extract_n#245L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#246L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#245L AS n#26L]                                                              Project [id#2, _extract_n#246L AS n#26L]
!+- Project [id#2, _extract_n#246L AS _extract_n#245L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#246L]
!      :- Project [id#2, nested#3.n AS _extract_n#246L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#246L AS n#26L]                                                           Project [id#2, _extract_n#246L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#246L]                                                   :- Project [id#2, nested#3.n AS _extract_n#246L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#246L AS n#26L]                                                           Project [id#2, _extract_n#246L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#246L]
!   :- Project [id#2, nested#3.n AS _extract_n#246L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#246L AS n#26L]                                                           Project [id#2, _extract_n#246L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#246L]                                                   +- Project [id#2, _extract_n#247L AS _extract_n#246L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#247L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#246L AS n#26L]                                                              Project [id#2, _extract_n#247L AS n#26L]
!+- Project [id#2, _extract_n#247L AS _extract_n#246L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#247L]
!      :- Project [id#2, nested#3.n AS _extract_n#247L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#247L AS n#26L]                                                           Project [id#2, _extract_n#247L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#247L]                                                   :- Project [id#2, nested#3.n AS _extract_n#247L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#247L AS n#26L]                                                           Project [id#2, _extract_n#247L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#247L]
!   :- Project [id#2, nested#3.n AS _extract_n#247L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#247L AS n#26L]                                                           Project [id#2, _extract_n#247L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#247L]                                                   +- Project [id#2, _extract_n#248L AS _extract_n#247L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#248L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#247L AS n#26L]                                                              Project [id#2, _extract_n#248L AS n#26L]
!+- Project [id#2, _extract_n#248L AS _extract_n#247L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#248L]
!      :- Project [id#2, nested#3.n AS _extract_n#248L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#248L AS n#26L]                                                           Project [id#2, _extract_n#248L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#248L]                                                   :- Project [id#2, nested#3.n AS _extract_n#248L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#248L AS n#26L]                                                           Project [id#2, _extract_n#248L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#248L]
!   :- Project [id#2, nested#3.n AS _extract_n#248L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#248L AS n#26L]                                                           Project [id#2, _extract_n#248L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#248L]                                                   +- Project [id#2, _extract_n#249L AS _extract_n#248L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#249L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#248L AS n#26L]                                                              Project [id#2, _extract_n#249L AS n#26L]
!+- Project [id#2, _extract_n#249L AS _extract_n#248L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#249L]
!      :- Project [id#2, nested#3.n AS _extract_n#249L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#249L AS n#26L]                                                           Project [id#2, _extract_n#249L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#249L]                                                   :- Project [id#2, nested#3.n AS _extract_n#249L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#249L AS n#26L]                                                           Project [id#2, _extract_n#249L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#249L]
!   :- Project [id#2, nested#3.n AS _extract_n#249L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#249L AS n#26L]                                                           Project [id#2, _extract_n#249L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#249L]                                                   +- Project [id#2, _extract_n#250L AS _extract_n#249L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#250L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:50 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#249L AS n#26L]                                                              Project [id#2, _extract_n#250L AS n#26L]
!+- Project [id#2, _extract_n#250L AS _extract_n#249L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#250L]
!      :- Project [id#2, nested#3.n AS _extract_n#250L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#250L AS n#26L]                                                           Project [id#2, _extract_n#250L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#250L]                                                   :- Project [id#2, nested#3.n AS _extract_n#250L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#250L AS n#26L]                                                           Project [id#2, _extract_n#250L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#250L]
!   :- Project [id#2, nested#3.n AS _extract_n#250L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#250L AS n#26L]                                                           Project [id#2, _extract_n#250L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#250L]                                                   +- Project [id#2, _extract_n#251L AS _extract_n#250L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#251L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#250L AS n#26L]                                                              Project [id#2, _extract_n#251L AS n#26L]
!+- Project [id#2, _extract_n#251L AS _extract_n#250L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#251L]
!      :- Project [id#2, nested#3.n AS _extract_n#251L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#251L AS n#26L]                                                           Project [id#2, _extract_n#251L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#251L]                                                   :- Project [id#2, nested#3.n AS _extract_n#251L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#251L AS n#26L]                                                           Project [id#2, _extract_n#251L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#251L]
!   :- Project [id#2, nested#3.n AS _extract_n#251L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#251L AS n#26L]                                                           Project [id#2, _extract_n#251L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#251L]                                                   +- Project [id#2, _extract_n#252L AS _extract_n#251L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#252L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#251L AS n#26L]                                                              Project [id#2, _extract_n#252L AS n#26L]
!+- Project [id#2, _extract_n#252L AS _extract_n#251L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#252L]
!      :- Project [id#2, nested#3.n AS _extract_n#252L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#252L AS n#26L]                                                           Project [id#2, _extract_n#252L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#252L]                                                   :- Project [id#2, nested#3.n AS _extract_n#252L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#252L AS n#26L]                                                           Project [id#2, _extract_n#252L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#252L]
!   :- Project [id#2, nested#3.n AS _extract_n#252L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#252L AS n#26L]                                                           Project [id#2, _extract_n#252L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#252L]                                                   +- Project [id#2, _extract_n#253L AS _extract_n#252L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#253L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#252L AS n#26L]                                                              Project [id#2, _extract_n#253L AS n#26L]
!+- Project [id#2, _extract_n#253L AS _extract_n#252L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#253L]
!      :- Project [id#2, nested#3.n AS _extract_n#253L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#253L AS n#26L]                                                           Project [id#2, _extract_n#253L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#253L]                                                   :- Project [id#2, nested#3.n AS _extract_n#253L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#253L AS n#26L]                                                           Project [id#2, _extract_n#253L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#253L]
!   :- Project [id#2, nested#3.n AS _extract_n#253L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#253L AS n#26L]                                                           Project [id#2, _extract_n#253L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#253L]                                                   +- Project [id#2, _extract_n#254L AS _extract_n#253L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#254L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#253L AS n#26L]                                                              Project [id#2, _extract_n#254L AS n#26L]
!+- Project [id#2, _extract_n#254L AS _extract_n#253L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#254L]
!      :- Project [id#2, nested#3.n AS _extract_n#254L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#254L AS n#26L]                                                           Project [id#2, _extract_n#254L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#254L]                                                   :- Project [id#2, nested#3.n AS _extract_n#254L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#254L AS n#26L]                                                           Project [id#2, _extract_n#254L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#254L]
!   :- Project [id#2, nested#3.n AS _extract_n#254L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#254L AS n#26L]                                                           Project [id#2, _extract_n#254L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#254L]                                                   +- Project [id#2, _extract_n#255L AS _extract_n#254L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#255L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#254L AS n#26L]                                                              Project [id#2, _extract_n#255L AS n#26L]
!+- Project [id#2, _extract_n#255L AS _extract_n#254L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#255L]
!      :- Project [id#2, nested#3.n AS _extract_n#255L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#255L AS n#26L]                                                           Project [id#2, _extract_n#255L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#255L]                                                   :- Project [id#2, nested#3.n AS _extract_n#255L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#255L AS n#26L]                                                           Project [id#2, _extract_n#255L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#255L]
!   :- Project [id#2, nested#3.n AS _extract_n#255L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#255L AS n#26L]                                                           Project [id#2, _extract_n#255L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#255L]                                                   +- Project [id#2, _extract_n#256L AS _extract_n#255L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#256L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#255L AS n#26L]                                                              Project [id#2, _extract_n#256L AS n#26L]
!+- Project [id#2, _extract_n#256L AS _extract_n#255L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#256L]
!      :- Project [id#2, nested#3.n AS _extract_n#256L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#256L AS n#26L]                                                           Project [id#2, _extract_n#256L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#256L]                                                   :- Project [id#2, nested#3.n AS _extract_n#256L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#256L AS n#26L]                                                           Project [id#2, _extract_n#256L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#256L]
!   :- Project [id#2, nested#3.n AS _extract_n#256L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#256L AS n#26L]                                                           Project [id#2, _extract_n#256L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#256L]                                                   +- Project [id#2, _extract_n#257L AS _extract_n#256L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#257L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#256L AS n#26L]                                                              Project [id#2, _extract_n#257L AS n#26L]
!+- Project [id#2, _extract_n#257L AS _extract_n#256L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#257L]
!      :- Project [id#2, nested#3.n AS _extract_n#257L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#257L AS n#26L]                                                           Project [id#2, _extract_n#257L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#257L]                                                   :- Project [id#2, nested#3.n AS _extract_n#257L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownLeftSemiAntiJoin ===
 Project [id#2, _extract_n#257L AS n#26L]                                                           Project [id#2, _extract_n#257L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#257L]
!   :- Project [id#2, nested#3.n AS _extract_n#257L]                                                   +- Join LeftAnti, (id#2 = id#18)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                                  :     +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                            +- Filter isnotnull(id#18)
!      +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- LocalTableScan <empty>, [id#18]                                                                    +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 Project [id#2, _extract_n#257L AS n#26L]                                                           Project [id#2, _extract_n#257L AS n#26L]
!+- Project [id#2, nested#3.n AS _extract_n#257L]                                                   +- Project [id#2, _extract_n#258L AS _extract_n#257L]
    +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!      :- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :- Project [id#2, nested#3.n AS _extract_n#258L]
!      :     +- LocalTableScan <empty>, [id#2, nested#3]                                                  :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      +- Filter isnotnull(id#18)                                                                         :        +- LocalTableScan <empty>, [id#2, nested#3]
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)               +- Project [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                           +- Filter isnotnull(id#18)
!                                                                                                               +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                     +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
!Project [id#2, _extract_n#257L AS n#26L]                                                              Project [id#2, _extract_n#258L AS n#26L]
!+- Project [id#2, _extract_n#258L AS _extract_n#257L]                                                 +- Join LeftAnti, (id#2 = id#18)
!   +- Join LeftAnti, (id#2 = id#18)                                                                      :- Project [id#2, nested#3.n AS _extract_n#258L]
!      :- Project [id#2, nested#3.n AS _extract_n#258L]                                                   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- LocalTableScan <empty>, [id#2, nested#3]
!      :        +- LocalTableScan <empty>, [id#2, nested#3]                                               +- Project [id#18]
!      +- Project [id#18]                                                                                    +- Filter isnotnull(id#18)
!         +- Filter isnotnull(id#18)                                                                            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                        +- LocalTableScan <empty>, [id#18]
!                  +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 Project [id#2, _extract_n#258L AS n#26L]                                                           Project [id#2, _extract_n#258L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
    :- Project [id#2, nested#3.n AS _extract_n#258L]                                                   :- Project [id#2, nested#3.n AS _extract_n#258L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Project [id#18]                                                                                 +- Filter isnotnull(id#18)
!      +- Filter isnotnull(id#18)                                                                         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!         +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- LocalTableScan <empty>, [id#18]
!               +- LocalTableScan <empty>, [id#18]                                                  
           
23/11/10 17:20:51 WARN BaseSessionStateBuilder$$anon$2: Max iterations (100) reached for batch Operator Optimization after Inferring Filters, please set 'spark.sql.optimizer.maxIterations' to a larger value.
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Result of Batch Operator Optimization after Inferring Filters ===
!Project [id#2, _extract_n#158L AS n#26L]                                                           Project [id#2, _extract_n#258L AS n#26L]
 +- Join LeftAnti, (id#2 = id#18)                                                                   +- Join LeftAnti, (id#2 = id#18)
!   :- Project [id#2, nested#3.n AS _extract_n#158L]                                                   :- Project [id#2, nested#3.n AS _extract_n#258L]
    :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :        +- LocalTableScan <empty>, [id#2, nested#3]                                               :        +- LocalTableScan <empty>, [id#2, nested#3]
    +- Filter isnotnull(id#18)                                                                         +- Filter isnotnull(id#18)
       +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                  +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
             +- LocalTableScan <empty>, [id#18]                                                                 +- LocalTableScan <empty>, [id#18]
          
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
23/11/10 17:20:51 DEBUG ExtractEquiJoinKeys: Considering join on: Some((id#2 = id#18))
23/11/10 17:20:51 DEBUG ExtractEquiJoinKeys: leftKeys:List(id#2) | rightKeys:List(id#18)
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
23/11/10 17:20:51 DEBUG ExtractEquiJoinKeys: Considering join on: Some((id#2 = id#18))
23/11/10 17:20:51 DEBUG ExtractEquiJoinKeys: leftKeys:List(id#2) | rightKeys:List(id#18)
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
23/11/10 17:20:51 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 10074
Total time: 0.239212656 seconds
Total number of effective runs: 799
Total time of effective runs: 0.108211073 seconds
      
23/11/10 17:20:51 DEBUG ExtractEquiJoinKeys: Considering join on: Some((id#2 = id#18))
23/11/10 17:20:51 DEBUG ExtractEquiJoinKeys: leftKeys:List(id#2) | rightKeys:List(id#18)
23/11/10 17:20:51 DEBUG ExtractEquiJoinKeys: Considering join on: Some((id#2 = id#18))
23/11/10 17:20:51 DEBUG ExtractEquiJoinKeys: leftKeys:List(id#2) | rightKeys:List(id#18)
23/11/10 17:20:51 DEBUG InsertAdaptiveSparkPlan: Adaptive execution enabled for plan: Project [id#2, _extract_n#258L AS n#26L]
+- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false
   :- Project [id#2, nested#3.n AS _extract_n#258L]
   :  +- InMemoryTableScan [id#2, nested#3]
   :        +- InMemoryRelation [id#217:20:51 DEBUG ExtractEquiJoinKeys: leftKeys:List(id#2) | rightKeys:List(id#18)
23/11/10 17:20:51 DEBUG InsertAdaptiveSparkPlan: Adaptive execution enabled for plan: Project [id#2, _extract_n#258L AS n#26L]
+- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false
   :- Project [id#2, nested#3.n AS _extract_n#258L]
   :  +- InMemoryTableScan [id#2, ne, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
   :              +- LocalTableScan <empty>, [id#2, nested#3]
   +- Filter isnotnull(id#18)
      +- InMemoryTableScan [id#18], [isnotnull(id#18)]
            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
                  +- LocalTableScan <empty>, [id#18]

23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 Project [id#2, _extract_n#258L AS n#26L]                                                                 Project [id#2, _extract_n#258L AS n#26L]
 +- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false                                        +- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false
    :- Project [id#2, nested#3.n AS _extract_n#258L]                                                         :- Project [id#2, nested#3.n AS _extract_n#258L]
    :  +- InMemoryTableScan [id#2, nested#3]                                                                 :  +- InMemoryTableScan [id#2, nested#3]
    :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :              +- LocalTableScan <empty>, [id#2, nested#3]                                               :              +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#32]
!      +- InMemoryTableScan [id#18], [isnotnull(id#18)]                                                         +- Filter isnotnull(id#18)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryTableScan [id#18], [isnotnull(id#18)]
!                  +- LocalTableScan <empty>, [id#18]                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                              +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Result of Batch AQE Preparations ===
 Project [id#2, _extract_n#258L AS n#26L]                                                                 Project [id#2, _extract_n#258L AS n#26L]
 +- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false                                        +- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false
    :- Project [id#2, nested#3.n AS _extract_n#258L]                                                         :- Project [id#2, nested#3.n AS _extract_n#258L]
    :  +- InMemoryTableScan [id#2, nested#3]                                                                 :  +- InMemoryTableScan [id#2, nested#3]
    :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)      :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
    :              +- LocalTableScan <empty>, [id#2, nested#3]                                               :              +- LocalTableScan <empty>, [id#2, nested#3]
!   +- Filter isnotnull(id#18)                                                                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#32]
!      +- InMemoryTableScan [id#18], [isnotnull(id#18)]                                                         +- Filter isnotnull(id#18)
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- InMemoryTableScan [id#18], [isnotnull(id#18)]
!                  +- LocalTableScan <empty>, [id#18]                                                                    +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                              +- LocalTableScan <empty>, [id#18]
          
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.execution.adaptive.InsertAdaptiveSparkPlan ===
!Project [id#2, _extract_n#258L AS n#26L]                                                                 AdaptiveSparkPlan isFinalPlan=false
!+- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false                                        +- Project [id#2, _extract_n#258L AS n#26L]
!   :- Project [id#2, nested#3.n AS _extract_n#258L]                                                         +- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false
!   :  +- InMemoryTableScan [id#2, nested#3]                                                                    :- Project [id#2, nested#3.n AS _extract_n#258L]
!   :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :  +- InMemoryTableScan [id#2, nested#3]
!   :              +- LocalTableScan <empty>, [id#2, nested#3]                                                  :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   +- Filter isnotnull(id#18)                                                                                  :              +- LocalTableScan <empty>, [id#2, nested#3]
!      +- InMemoryTableScan [id#18], [isnotnull(id#18)]                                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#32]
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- Filter isnotnull(id#18)
!                  +- LocalTableScan <empty>, [id#18]                                                                 +- InMemoryTableScan [id#18], [isnotnull(id#18)]
!                                                                                                                           +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                                 +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Result of Batch Preparations ===
!Project [id#2, _extract_n#258L AS n#26L]                                                                 AdaptiveSparkPlan isFinalPlan=false
!+- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false                                        +- Project [id#2, _extract_n#258L AS n#26L]
!   :- Project [id#2, nested#3.n AS _extract_n#258L]                                                         +- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false
!   :  +- InMemoryTableScan [id#2, nested#3]                                                                    :- Project [id#2, nested#3.n AS _extract_n#258L]
!   :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         :  +- InMemoryTableScan [id#2, nested#3]
!   :              +- LocalTableScan <empty>, [id#2, nested#3]                                                  :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   +- Filter isnotnull(id#18)                                                                                  :              +- LocalTableScan <empty>, [id#2, nested#3]
!      +- InMemoryTableScan [id#18], [isnotnull(id#18)]                                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#32]
!            +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)                     +- Filter isnotnull(id#18)
!                  +- LocalTableScan <empty>, [id#18]                                                                 +- InMemoryTableScan [id#18], [isnotnull(id#18)]
!                                                                                                                           +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
!                                                                                                                                 +- LocalTableScan <empty>, [id#18]
          
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Substitution has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
23/11/10 17:20:51 DEBUG DFSClient: WriteChunk allocating new packet seqno=10, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=94208, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:51 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=101260, lastFlushOffset=94516, createNewBlock=false
23/11/10 17:20:51 DEBUG DataStreamer: Queued packet seqno: 10 offsetInBlock: 94208 lastPacketInBlock: false lastByteOffsetInBlock: 101260, blk_1073742674_1855
23/11/10 17:20:51 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 10
23/11/10 17:20:51 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:51 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 10 offsetInBlock: 94208 lastPacketInBlock: false lastByteOffsetInBlock: 101260
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
23/11/10 17:20:51 DEBUG DataStreamer: DFSClient seqno: 10 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Hints has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
23/11/10 17:20:51 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [id#2, n#26L]
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(id,StringType,true), StructField(n,LongType,true)).toString, getcolumnbyordinal(1, StructField(id,StringType,true), StructField(n,LongType,true)), StructField(id,StringType,true), StructField(n,LongType,true))), obj#274: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(id#2.toString, n#26L, StructField(id,StringType,true), StructField(n,LongType,true)), obj#274: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [id#2, n#26L]                                                                                                                                                                                                                                                                                                                 +- LocalRelation <empty>, [id#2, n#26L]
           
23/11/10 17:20:51 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject createexternalrow(id#2.toString, n#26L, StructField(id,StringType,true), StructField(n,LongType,true)), obj#274: org.apache.spark.sql.Row
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(id,StringType,true), StructField(n,LongType,true)).toString, getcolumnbyordinal(1, StructField(id,StringType,true), StructField(n,LongType,true)), StructField(id,StringType,true), StructField(n,LongType,true))), obj#274: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(id#2.toString, n#26L, StructField(id,StringType,true), StructField(n,LongType,true)), obj#274: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [id#2, n#26L]                                                                                                                                                                                                                                                                                                                 +- LocalRelation <empty>, [id#2, n#26L]
          
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Apply Char Padding after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Apply Char Padding has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch UDF has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch UpdateNullability after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch UpdateNullability has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Subquery has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch Cleanup has no effect.
23/11/10 17:20:51 TRACE HiveSessionStateBuilder$$anon$1: Fixed point reached for batch HandleAnalysisOnlyCommand after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 133
Total time: 0.001624458 seconds
Total number of effective runs: 1
Total time of effective runs: 1.9252E-4 seconds
      
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#32]   BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#42]
!+- Filter isnotnull(id#18)                                                                     +- *(1) Filter isnotnull(id#18)
    +- InMemoryTableScan [id#18], [isnotnull(id#18)]                                               +- InMemoryTableScan [id#18], [isnotnull(id#18)]
          +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)              +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
                +- LocalTableScan <empty>, [id#18]                                                             +- LocalTableScan <empty>, [id#18]
           
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Result of Batch AQE Post Stage Creation ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#32]   BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#42]
!+- Filter isnotnull(id#18)                                                                     +- *(1) Filter isnotnull(id#18)
    +- InMemoryTableScan [id#18], [isnotnull(id#18)]                                               +- InMemoryTableScan [id#18], [isnotnull(id#18)]
          +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)              +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
                +- LocalTableScan <empty>, [id#18]                                                             +- LocalTableScan <empty>, [id#18]
          
23/11/10 17:20:51 DEBUG BroadcastQueryStageExec: Materialize query stage BroadcastQueryStageExec: 0
23/11/10 17:20:51 DEBUG DFSClient: WriteChunk allocating new packet seqno=11, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=100864, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:51 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=106658, lastFlushOffset=101260, createNewBlock=false
23/11/10 17:20:51 DEBUG DataStreamer: Queued packet seqno: 11 offsetInBlock: 100864 lastPacketInBlock: false lastByteOffsetInBlock: 106658, blk_1073742674_1855
23/11/10 17:20:51 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 11
23/11/10 17:20:51 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:51 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 11 offsetInBlock: 100864 lastPacketInBlock: false lastByteOffsetInBlock: 106658
23/11/10 17:20:51 DEBUG DataStreamer: DFSClient seqno: 11 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:51 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
23/11/10 17:20:51 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
23/11/10 17:20:51 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.81141E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds
      
23/11/10 17:20:51 DEBUG WholeStageCodegenExec: 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 030 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_value_2 = !inputadapter_isNull_0;
/* 034 */         if (!filter_value_2) continue;
/* 035 */
/* 036 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 037 */
/* 038 */         filter_mutableStateArray_0[0].reset();
/* 039 */
/* 040 */         filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 041 */         append((filter_mutableStateArray_0[0].getRow()));
/* 042 */
/* 043 */       } while(false);
/* 044 */       if (shouldStop()) return;
/* 045 */     }
/* 046 */   }
/* 047 */
/* 048 */ }

23/11/10 17:20:51 DEBUG CodeGenerator: 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 030 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_value_2 = !inputadapter_isNull_0;
/* 034 */         if (!filter_value_2) continue;
/* 035 */
/* 036 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 037 */
/* 038 */         filter_mutableStateArray_0[0].reset();
/* 039 */
/* 040 */         filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 041 */         append((filter_mutableStateArray_0[0].getRow()));
/* 042 */
/* 043 */       } while(false);
/* 044 */       if (shouldStop()) return;
/* 045 */     }
/* 046 */   }
/* 047 */
/* 048 */ }

23/11/10 17:20:51 INFO CodeGenerator: Code generated in 115.19863 ms
23/11/10 17:20:51 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$doExecute$1
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$doExecute$1) is now cleaned +++
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$buildBuffers$1
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$buildBuffers$1) is now cleaned +++
23/11/10 17:20:52 INFO DefaultCachedBatchSerializer: Predicate isnotnull(id#18) generates partition filter: ((id.count#285 - id.nullCount#284) > 0)
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$doExecute$4$adapted
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$doExecute$4$adapted) is now cleaned +++
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$collect$2
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$collect$2) is now cleaned +++
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$runJob$5
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$runJob$5) is now cleaned +++
23/11/10 17:20:52 INFO SparkContext: Starting job: $anonfun$withThreadLocalCaptured$1 at FutureTask.java:266
23/11/10 17:20:52 DEBUG DAGScheduler: eagerlyComputePartitionsForRddAndAncestors for RDD 8 took 0.000537 seconds
23/11/10 17:20:52 INFO DAGScheduler: Job 0 finished: $anonfun$withThreadLocalCaptured$1 at FutureTask.java:266, took 0.003619 s
23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=12, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=106496, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=109489, lastFlushOffset=106658, createNewBlock=false
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 12 offsetInBlock: 106496 lastPacketInBlock: false lastByteOffsetInBlock: 109489, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 12
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 12 offsetInBlock: 106496 lastPacketInBlock: false lastByteOffsetInBlock: 109489
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 12 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=13, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=109056, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=109603, lastFlushOffset=109489, createNewBlock=false
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 13 offsetInBlock: 109056 lastPacketInBlock: false lastByteOffsetInBlock: 109603, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 13
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 13 offsetInBlock: 109056 lastPacketInBlock: false lastByteOffsetInBlock: 109603
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 13 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 TRACE BlockInfoManager: Task -1024 trying to put broadcast_0
23/11/10 17:20:52 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_0
23/11/10 17:20:52 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_0
23/11/10 17:20:52 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 24.0 B, free 366.3 MiB)
23/11/10 17:20:52 DEBUG BlockManager: Put block broadcast_0 locally took 13 ms
23/11/10 17:20:52 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_0
23/11/10 17:20:52 DEBUG BlockManager: Putting block broadcast_0 without replication took 14 ms
23/11/10 17:20:52 TRACE BlockInfoManager: Task -1024 trying to put broadcast_0_piece0
23/11/10 17:20:52 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_0_piece0
23/11/10 17:20:52 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_0_piece0
23/11/10 17:20:52 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 120.0 B, free 366.3 MiB)
23/11/10 17:20:52 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_0_piece0 for BlockManagerId(driver, Jiahao, 37043, None)
23/11/10 17:20:52 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on Jiahao:37043 (size: 120.0 B, free: 366.3 MiB)
23/11/10 17:20:52 DEBUG BlockManagerMaster: Updated info of block broadcast_0_piece0
23/11/10 17:20:52 DEBUG BlockManager: Told master about block broadcast_0_piece0
23/11/10 17:20:52 DEBUG BlockManager: Put block broadcast_0_piece0 locally took 3 ms
23/11/10 17:20:52 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_0_piece0
23/11/10 17:20:52 DEBUG BlockManager: Putting block broadcast_0_piece0 without replication took 3 ms
23/11/10 17:20:52 INFO SparkContext: Created broadcast 0 from $anonfun$withThreadLocalCaptured$1 at FutureTask.java:266
23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=14, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=109568, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=109752, lastFlushOffset=109603, createNewBlock=false
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 14 offsetInBlock: 109568 lastPacketInBlock: false lastByteOffsetInBlock: 109752, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 14
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 14 offsetInBlock: 109568 lastPacketInBlock: false lastByteOffsetInBlock: 109752
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 14 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.execution.adaptive.AQEPropagateEmptyRelation ===
 Project [id#2, _extract_n#258L AS n#26L]                                                           Project [id#2, _extract_n#258L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#258L]
!   :- Project [id#2, nested#3.n AS _extract_n#258L]                                                   +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)            +- LocalTableScan <empty>, [id#2, nested#3]
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                            
!   +- LogicalQueryStage Filter isnotnull(id#18), BroadcastQueryStage 0                             
           
23/11/10 17:20:52 TRACE AQEOptimizer: Fixed point reached for batch Propagate Empty Relations after 2 iterations.
23/11/10 17:20:52 TRACE PlanChangeLogger: 
=== Result of Batch Propagate Empty Relations ===
 Project [id#2, _extract_n#258L AS n#26L]                                                           Project [id#2, _extract_n#258L AS n#26L]
!+- Join LeftAnti, (id#2 = id#18)                                                                   +- Project [id#2, nested#3.n AS _extract_n#258L]
!   :- Project [id#2, nested#3.n AS _extract_n#258L]                                                   +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
!   :  +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)            +- LocalTableScan <empty>, [id#2, nested#3]
!   :        +- LocalTableScan <empty>, [id#2, nested#3]                                            
!   +- LogicalQueryStage Filter isnotnull(id#18), BroadcastQueryStage 0                             
          
23/11/10 17:20:52 TRACE AQEOptimizer: Fixed point reached for batch Dynamic Join Selection after 1 iterations.
23/11/10 17:20:52 TRACE PlanChangeLogger: Batch Dynamic Join Selection has no effect.
23/11/10 17:20:52 TRACE AQEOptimizer: Fixed point reached for batch Eliminate Limits after 1 iterations.
23/11/10 17:20:52 TRACE PlanChangeLogger: Batch Eliminate Limits has no effect.
23/11/10 17:20:52 TRACE AQEOptimizer: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
23/11/10 17:20:52 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
23/11/10 17:20:52 TRACE PlanChangeLogger: 
=== Metrics of Executed Rules ===
Total number of runs: 9
Total time: 0.001805243 seconds
Total number of effective runs: 1
Total time of effective runs: 0.001107154 seconds
      
23/11/10 17:20:52 TRACE PlanChangeLogger: Batch AQE Replanning has no effect.
23/11/10 17:20:52 DEBUG AdaptiveSparkPlanExec: Plan changed from Project [id#2, _extract_n#258L AS n#26L]
+- BroadcastHashJoin [id#2], [id#18], LeftAnti, BuildRight, false
   :- Project [id#2, nested#3.n AS _extract_n#258L]
   :  +- InMemoryTableScan [id#2, nested#3]
   :        +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
   :              +- LocalTableScan <empty>, [id#2, nested#3]
   +- BroadcastQueryStage 0
      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [id=#42]
         +- *(1) Filter isnotnull(id#18)
            +- InMemoryTableScan [id#18], [isnotnull(id#18)]
                  +- InMemoryRelation [id#18], StorageLevel(disk, memory, deserialized, 1 replicas)
                        +- LocalTableScan <empty>, [id#18]
 to Project [id#2, nested#3.n AS n#26L]
+- InMemoryTableScan [id#2, nested#3]
      +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
            +- LocalTableScan <empty>, [id#2, nested#3]

23/11/10 17:20:52 TRACE PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
23/11/10 17:20:52 TRACE PlanChangeLogger: 
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!Project [id#2, nested#3.n AS n#26L]                                                                *(2) Project [id#2, nested#3.n AS n#26L]
 +- InMemoryTableScan [id#2, nested#3]                                                              +- InMemoryTableScan [id#2, nested#3]
       +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
             +- LocalTableScan <empty>, [id#2, nested#3]                                                        +- LocalTableScan <empty>, [id#2, nested#3]
           
23/11/10 17:20:52 TRACE PlanChangeLogger: 
=== Result of Batch AQE Post Stage Creation ===
!Project [id#2, nested#3.n AS n#26L]                                                                *(2) Project [id#2, nested#3.n AS n#26L]
 +- InMemoryTableScan [id#2, nested#3]                                                              +- InMemoryTableScan [id#2, nested#3]
       +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)         +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
             +- LocalTableScan <empty>, [id#2, nested#3]                                                        +- LocalTableScan <empty>, [id#2, nested#3]
          
23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=15, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=109568, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=112984, lastFlushOffset=109752, createNewBlock=false
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 15 offsetInBlock: 109568 lastPacketInBlock: false lastByteOffsetInBlock: 112984, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 15
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 15 offsetInBlock: 109568 lastPacketInBlock: false lastByteOffsetInBlock: 112984
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 15 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 DEBUG WholeStageCodegenExec: 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] project_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     project_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       // common sub-expressions
/* 029 */
/* 030 */       boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 031 */       UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 032 */       null : (inputadapter_row_0.getUTF8String(0));
/* 033 */       boolean inputadapter_isNull_1 = inputadapter_row_0.isNullAt(1);
/* 034 */       InternalRow inputadapter_value_1 = inputadapter_isNull_1 ?
/* 035 */       null : (inputadapter_row_0.getStruct(1, 2));
/* 036 */       boolean project_isNull_1 = inputadapter_isNull_1;
/* 037 */       long project_value_1 = -1L;
/* 038 */
/* 039 */       if (!inputadapter_isNull_1) {
/* 040 */         if (inputadapter_value_1.isNullAt(1)) {
/* 041 */           project_isNull_1 = true;
/* 042 */         } else {
/* 043 */           project_value_1 = inputadapter_value_1.getLong(1);
/* 044 */         }
/* 045 */
/* 046 */       }
/* 047 */       project_mutableStateArray_0[0].reset();
/* 048 */
/* 049 */       project_mutableStateArray_0[0].zeroOutNullBytes();
/* 050 */
/* 051 */       if (inputadapter_isNull_0) {
/* 052 */         project_mutableStateArray_0[0].setNullAt(0);
/* 053 */       } else {
/* 054 */         project_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 055 */       }
/* 056 */
/* 057 */       if (project_isNull_1) {
/* 058 */         project_mutableStateArray_0[0].setNullAt(1);
/* 059 */       } else {
/* 060 */         project_mutableStateArray_0[0].write(1, project_value_1);
/* 061 */       }
/* 062 */       append((project_mutableStateArray_0[0].getRow()));
/* 063 */       if (shouldStop()) return;
/* 064 */     }
/* 065 */   }
/* 066 */
/* 067 */ }

23/11/10 17:20:52 DEBUG CodeGenerator: 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] project_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     project_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       // common sub-expressions
/* 029 */
/* 030 */       boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 031 */       UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 032 */       null : (inputadapter_row_0.getUTF8String(0));
/* 033 */       boolean inputadapter_isNull_1 = inputadapter_row_0.isNullAt(1);
/* 034 */       InternalRow inputadapter_value_1 = inputadapter_isNull_1 ?
/* 035 */       null : (inputadapter_row_0.getStruct(1, 2));
/* 036 */       boolean project_isNull_1 = inputadapter_isNull_1;
/* 037 */       long project_value_1 = -1L;
/* 038 */
/* 039 */       if (!inputadapter_isNull_1) {
/* 040 */         if (inputadapter_value_1.isNullAt(1)) {
/* 041 */           project_isNull_1 = true;
/* 042 */         } else {
/* 043 */           project_value_1 = inputadapter_value_1.getLong(1);
/* 044 */         }
/* 045 */
/* 046 */       }
/* 047 */       project_mutableStateArray_0[0].reset();
/* 048 */
/* 049 */       project_mutableStateArray_0[0].zeroOutNullBytes();
/* 050 */
/* 051 */       if (inputadapter_isNull_0) {
/* 052 */         project_mutableStateArray_0[0].setNullAt(0);
/* 053 */       } else {
/* 054 */         project_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 055 */       }
/* 056 */
/* 057 */       if (project_isNull_1) {
/* 058 */         project_mutableStateArray_0[0].setNullAt(1);
/* 059 */       } else {
/* 060 */         project_mutableStateArray_0[0].write(1, project_value_1);
/* 061 */       }
/* 062 */       append((project_mutableStateArray_0[0].getRow()));
/* 063 */       if (shouldStop()) return;
/* 064 */     }
/* 065 */   }
/* 066 */
/* 067 */ }

23/11/10 17:20:52 INFO CodeGenerator: Code generated in 10.710877 ms
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$doExecute$1
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$doExecute$1) is now cleaned +++
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$buildBuffers$1
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$buildBuffers$1) is now cleaned +++
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$doExecute$4$adapted
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$doExecute$4$adapted) is now cleaned +++
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$collect$2
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$collect$2) is now cleaned +++
23/11/10 17:20:52 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$runJob$5
23/11/10 17:20:52 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$runJob$5) is now cleaned +++
23/11/10 17:20:52 INFO SparkContext: Starting job: collect at /home/dbgroup/Documents/Code/Research/qotrace/qotrace-misc/spark-program/spark-scripts/bug0-0/Bug0_0.scala:43
23/11/10 17:20:52 DEBUG DAGScheduler: eagerlyComputePartitionsForRddAndAncestors for RDD 17 took 0.000076 seconds
23/11/10 17:20:52 INFO DAGScheduler: Job 1 finished: collect at /home/dbgroup/Documents/Code/Research/qotrace/qotrace-misc/spark-program/spark-scripts/bug0-0/Bug0_0.scala:43, took 0.000297 s
23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=16, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=112640, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=115767, lastFlushOffset=112984, createNewBlock=false
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 16 offsetInBlock: 112640 lastPacketInBlock: false lastByteOffsetInBlock: 115767, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 16
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 16 offsetInBlock: 112640 lastPacketInBlock: false lastByteOffsetInBlock: 115767
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 16 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 DEBUG AdaptiveSparkPlanExec: Final plan: *(2) Project [id#2, nested#3.n AS n#26L]
+- InMemoryTableScan [id#2, nested#3]
      +- InMemoryRelation [id#2, nested#3], StorageLevel(disk, memory, deserialized, 1 replicas)
            +- LocalTableScan <empty>, [id#2, nested#3]

23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=17, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=115712, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=115881, lastFlushOffset=115767, createNewBlock=false
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 17 offsetInBlock: 115712 lastPacketInBlock: false lastByteOffsetInBlock: 115881, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 17
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 17 offsetInBlock: 115712 lastPacketInBlock: false lastByteOffsetInBlock: 115881
Completed
[END] Time = 13.889 s
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 17 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=18, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=115712, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=115993, lastFlushOffset=115881, createNewBlock=false
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 18 offsetInBlock: 115712 lastPacketInBlock: false lastByteOffsetInBlock: 115993, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 18
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 18 offsetInBlock: 115712 lastPacketInBlock: false lastByteOffsetInBlock: 115993
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 18 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 INFO SparkContext: Invoking stop() from shutdown hook
23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=19, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=115712, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DFSClient: DFSClient flush():  bytesCurBlock=116059, lastFlushOffset=115993, createNewBlock=false
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 19 offsetInBlock: 115712 lastPacketInBlock: false lastByteOffsetInBlock: 116059, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 19
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 19 offsetInBlock: 115712 lastPacketInBlock: false lastByteOffsetInBlock: 116059
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 19 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 INFO SparkUI: Stopped Spark web UI at http://Jiahao:4040
23/11/10 17:20:52 DEBUG DFSClient: WriteChunk allocating new packet seqno=20, src=/spark3.3.0-logs/local-1699608035741.inprogress, packetSize=65016, chunksPerPacket=126, bytesCurBlock=115712, output stream=DFSOutputStream:blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 20 offsetInBlock: 115712 lastPacketInBlock: false lastByteOffsetInBlock: 116059, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: Queued packet seqno: 21 offsetInBlock: 116059 lastPacketInBlock: true lastByteOffsetInBlock: 116059, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 waiting for ack for: 21
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 20 offsetInBlock: 115712 lastPacketInBlock: false lastByteOffsetInBlock: 116059
23/11/10 17:20:52 DEBUG DataStreamer: stage=DATA_STREAMING, blk_1073742674_1855
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 20 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 DEBUG DataStreamer: blk_1073742674_1855 sending packet seqno: 21 offsetInBlock: 116059 lastPacketInBlock: true lastByteOffsetInBlock: 116059
23/11/10 17:20:52 DEBUG DataStreamer: DFSClient seqno: 21 reply: SUCCESS downstreamAckTimeNanos: 0 flag: 0
23/11/10 17:20:52 DEBUG DataStreamer: Closing old block BP-80912574-127.0.1.1-1665050837178:blk_1073742674_1855
23/11/10 17:20:52 TRACE ProtobufRpcEngine2: 94: Call -> Jiahao/127.0.1.1:9000: complete {src: "/spark3.3.0-logs/local-1699608035741.inprogress" clientName: "DFSClient_NONMAPREDUCE_1351343509_1" last { poolId: "BP-80912574-127.0.1.1-1665050837178" blockId: 1073742674 generationStamp: 1855 numBytes: 116059 } fileId: 17314}
23/11/10 17:20:52 DEBUG Client: The ping interval is 60000 ms.
23/11/10 17:20:52 DEBUG Client: Connecting to Jiahao/127.0.1.1:9000
23/11/10 17:20:52 DEBUG Client: Setup connection to Jiahao/127.0.1.1:9000
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup: starting, having connections 1
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup sending #7 org.apache.hadoop.hdfs.protocol.ClientProtocol.complete
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup got value #7
23/11/10 17:20:52 DEBUG ProtobufRpcEngine2: Call: complete took 2ms
23/11/10 17:20:52 TRACE ProtobufRpcEngine2: 94: Response <- Jiahao/127.0.1.1:9000: complete {result: true}
23/11/10 17:20:52 TRACE ProtobufRpcEngine2: 94: Call -> Jiahao/127.0.1.1:9000: getFileInfo {src: "/spark3.3.0-logs/local-1699608035741"}
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup sending #8 org.apache.hadoop.hdfs.protocol.ClientProtocol.getFileInfo
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup got value #8
23/11/10 17:20:52 DEBUG ProtobufRpcEngine2: Call: getFileInfo took 0ms
23/11/10 17:20:52 TRACE ProtobufRpcEngine2: 94: Response <- Jiahao/127.0.1.1:9000: getFileInfo {}
23/11/10 17:20:52 TRACE ProtobufRpcEngine2: 94: Call -> Jiahao/127.0.1.1:9000: rename {src: "/spark3.3.0-logs/local-1699608035741.inprogress" dst: "/spark3.3.0-logs/local-1699608035741"}
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup sending #9 org.apache.hadoop.hdfs.protocol.ClientProtocol.rename
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup got value #9
23/11/10 17:20:52 DEBUG ProtobufRpcEngine2: Call: rename took 1ms
23/11/10 17:20:52 TRACE ProtobufRpcEngine2: 94: Response <- Jiahao/127.0.1.1:9000: rename {result: true}
23/11/10 17:20:52 TRACE ProtobufRpcEngine2: 94: Call -> Jiahao/127.0.1.1:9000: setTimes {src: "/spark3.3.0-logs/local-1699608035741" mtime: 1699608052275 atime: 18446744073709551615}
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup sending #10 org.apache.hadoop.hdfs.protocol.ClientProtocol.setTimes
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup got value #10
23/11/10 17:20:52 DEBUG ProtobufRpcEngine2: Call: setTimes took 2ms
23/11/10 17:20:52 TRACE ProtobufRpcEngine2: 94: Response <- Jiahao/127.0.1.1:9000: setTimes {}
23/11/10 17:20:52 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
23/11/10 17:20:52 INFO MemoryStore: MemoryStore cleared
23/11/10 17:20:52 INFO BlockManager: BlockManager stopped
23/11/10 17:20:52 INFO BlockManagerMaster: BlockManagerMaster stopped
23/11/10 17:20:52 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
23/11/10 17:20:52 INFO SparkContext: Successfully stopped SparkContext
23/11/10 17:20:52 INFO ShutdownHookManager: Shutdown hook called
23/11/10 17:20:52 INFO ShutdownHookManager: Deleting directory /tmp/spark-21ceebfc-feb5-4a21-984b-b4ea50c69e65/repl-171aecc2-df5b-46d6-a2d8-1c15fbe907a0
23/11/10 17:20:52 INFO ShutdownHookManager: Deleting directory /tmp/spark-21ceebfc-feb5-4a21-984b-b4ea50c69e65
23/11/10 17:20:52 INFO ShutdownHookManager: Deleting directory /tmp/spark-52ced8ea-8303-44df-bfb3-cfe81fc3ced5
23/11/10 17:20:52 DEBUG FileSystem: FileSystem.close() by method: org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1518)); Key: (dbgroup (auth:SIMPLE))@hdfs://jiahao:9000; URI: hdfs://Jiahao:9000; Object Identity Hash: 6a24b917
23/11/10 17:20:52 TRACE FileSystem: FileSystem.close() full stack trace:
java.lang.Throwable
	at org.apache.hadoop.fs.FileSystem.debugLogFileSystemClose(FileSystem.java:645)
	at org.apache.hadoop.fs.FileSystem.close(FileSystem.java:2592)
	at org.apache.hadoop.hdfs.DistributedFileSystem.close(DistributedFileSystem.java:1518)
	at org.apache.hadoop.fs.FileSystem$Cache.closeAll(FileSystem.java:3678)
	at org.apache.hadoop.fs.FileSystem$Cache$ClientFinalizer.run(FileSystem.java:3695)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
23/11/10 17:20:52 DEBUG Client: stopping client from cache: Client-a39659ddb4cb4af3995688ccfdd5e52c
23/11/10 17:20:52 DEBUG Client: removing client from cache: Client-a39659ddb4cb4af3995688ccfdd5e52c
23/11/10 17:20:52 DEBUG Client: stopping actual client because no more references remain: Client-a39659ddb4cb4af3995688ccfdd5e52c
23/11/10 17:20:52 DEBUG Client: Stopping client
23/11/10 17:20:52 TRACE Client: Interrupted while waiting to retrieve RPC response.
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup: closed
23/11/10 17:20:52 DEBUG Client: IPC Client (1660295258) connection to Jiahao/127.0.1.1:9000 from dbgroup: stopped, remaining connections 0
23/11/10 17:20:52 DEBUG ShutdownHookManager: Completed shutdown in 0.054 seconds; Timeouts: 0
23/11/10 17:20:52 DEBUG ShutdownHookManager: ShutdownHookManager completed shutdown.
